
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR C_CONST DATAFRAME DESCRIBE DIFFERENT DO ELSE EQUAL FALSE FLOAT FOR FUNC F_CONST ID IF INT I_CONST MAIN OR PRINT PROG RETURN TITLE TO TRUE VAR VOID WHILE\n    PROGRAM : PROG add_type ID add_id ';' go_to_main save_function VARS_PRIME FUNCTION_PRIME VOID MAIN '{' fill_go_to_main_quad VARS_PRIME BLOCK '}' empty_global_variables_table\n    go_to_main : empty_global_variables_table : empty_local_variables_table : fill_go_to_main_quad : add_id : save_ids : save_parameter : save_function : \n    VARS_PRIME : VARS VARS_PRIME\n               | empty\n    \n    FUNCTION_PRIME : FUNCTION FUNC_PRIME\n                   | empty\n    \n    FUNC_PRIME : FUNCTION FUNC_PRIME\n         | empty\n    add_type : add_current_type : \n    VARS : VAR TIPO_COMP ID add_id TIPO_PRIME ';' save_ids\n         | VAR TIPO_SIMPLE ID add_id TIPO_PRIME ';' save_ids\n         | VAR TIPO_SIMPLE ID '[' EXPRESSION ']' ';'\n         | VAR TIPO_SIMPLE ID '[' EXPRESSION ']' '[' EXPRESSION ']' ';'\n    \n    TIPO_PRIME : ',' ID add_id add_current_type TIPO_PRIME\n               | empty\n    get_variable : \n    VARIABLE : ID get_variable\n             | ID '[' EXPRESSION ']'\n    \n    TIPO_SIMPLE : INT add_type\n                | FLOAT add_type\n                | CHAR add_type\n    \n    TIPO_COMP : DATAFRAME\n    add_function_type : save_function_as_global_variable : \n    FUNCTION : FUNC TIPO_SIMPLE add_function_type ID add_id save_function '(' PARAM add_parameters ')' '{' VARS_PRIME BLOCK RETURN EXPRESSION ';' save_function_as_global_variable '}' empty_local_variables_table\n             | FUNC VOID add_type ID add_id save_function '(' PARAM add_parameters ')' '{' VARS_PRIME BLOCK '}' empty_local_variables_table\n    add_parameters : \n    PARAM : TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME\n          | empty\n    \n    PARAM_PRIME : ',' TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME\n                | empty\n    \n    BLOCK : STATEMENT BLOCK\n          | empty\n    \n    STATEMENT : ASSIGNATION\n              | FUNC_CALL\n              | EXPRESSION ';'\n              | WRITE ';'\n              | CONDITION\n              | WHILE_STMT\n              | FOR_STMT\n              | DESCRIBE_STMT\n    add_operator : add_operand : add_assignation_quad : add_assignation_for_quad : \n    ASSIGNATION : VARIABLE '=' add_operator EXPRESSION ';' add_assignation_quad\n                | FOR VARIABLE '=' add_operator EXPRESSION add_assignation_for_quad\n    era_quad : param_quad : go_sub_quad : \n    FUNC_CALL : ID era_quad '(' EXPRESSION param_quad FUNC_CALL_PRIME ')' ';' go_sub_quad\n    \n    FUNC_CALL_PRIME : ',' EXPRESSION param_quad FUNC_CALL_PRIME\n                    | empty\n    print_quad : add_print_operator : \n    WRITE : PRINT add_operator '(' EXPRESSION print_quad WRITE_PRIME ')'\n               | PRINT add_operator '(' TITLE WRITE_PRIME ')'\n    \n    WRITE_PRIME : ',' add_print_operator EXPRESSION print_quad WRITE_PRIME\n                | ',' add_print_operator TITLE print_quad WRITE_PRIME\n                | empty\n    go_to_false_quad : fill_go_to_false_quad : go_to_true_quad : fill_go_to_true_quad : go_to_quad : pop_operand : pop_type : append_jump : \n    CONDITION : IF '(' EXPRESSION pop_operand pop_type ')' '{' go_to_false_quad BLOCK '}' fill_go_to_false_quad ELSE_STMT\n    \n    ELSE_STMT : ELSE '{' go_to_true_quad BLOCK '}' fill_go_to_true_quad\n              | empty\n    \n    WHILE_STMT : WHILE '(' append_jump EXPRESSION pop_operand pop_type ')' '{' go_to_false_quad  BLOCK '}' fill_go_to_false_quad go_to_quad\n    check_exact_type_for : add_final_counter_for : generate_for_quad : check_boolean_expression_for : end_for : \n    FOR_STMT : ASSIGNATION check_exact_type_for TO '(' EXPRESSION check_exact_type_for add_final_counter_for check_boolean_expression_for ')' generate_for_quad DO '{' BLOCK '}' end_for\n    \n    DESCRIBE_STMT : ID '.' DESCRIBE '(' ')' \n    aritmetics_operation : \n    EXPRESSION : AND_EXP EXPRESSION_PRIME\n    \n    EXPRESSION_PRIME : OR AND_EXP EXPRESSION_PRIME\n                     | empty\n    \n    AND_EXP : B_EXP AND_EXP_PRIME\n    \n    AND_EXP_PRIME : AND B_EXP AND_EXP_PRIME\n                  | empty\n    \n    B_EXP : TRUE\n          | FALSE\n          | EXP B_EXP_PRIME\n    \n    B_EXP_PRIME : '>' add_operator B_EXP aritmetics_operation\n                | '<' add_operator B_EXP aritmetics_operation\n                | DIFFERENT add_operator B_EXP aritmetics_operation\n                | EQUAL add_operator B_EXP aritmetics_operation\n                | empty\n    \n    EXP : TERM EXP_PRIME\n    \n    EXP_PRIME : '+' add_operator TERM EXP_PRIME aritmetics_operation\n              | '-' add_operator TERM EXP_PRIME aritmetics_operation\n              | empty\n    \n    TERM : FACTOR TERM_PRIME\n    \n    TERM_PRIME : '*' add_operator FACTOR aritmetics_operation TERM_PRIME \n                  | '/' add_operator FACTOR aritmetics_operation TERM_PRIME \n                  | empty\n    \n    FACTOR : '(' EXPRESSION ')'\n              | '*' VAR_CT\n              | '/' VAR_CT\n              | VAR_CT\n    \n    VAR_CT : ID add_operand\n           | I_CONST add_operand\n           | F_CONST add_operand\n           | C_CONST add_operand\n    empty :"
    
_lr_action_items = {'PROG':([0,],[2,]),'$end':([1,153,181,],[0,-3,-1,]),'ID':([2,3,10,11,17,18,19,20,21,22,23,28,29,32,33,34,37,38,41,42,46,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,122,123,126,127,128,129,131,139,140,141,142,143,144,145,146,147,148,152,156,157,158,162,163,164,170,171,172,173,174,175,176,177,178,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,247,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-16,4,-119,-11,-10,30,31,-30,-16,-16,-16,-31,-16,-27,-28,-29,43,44,49,-5,69,-51,-119,-119,-95,-96,-119,-119,-119,49,49,-114,49,-51,-51,-51,-119,-7,-7,-115,-89,49,-91,-92,49,-94,-97,-50,-50,-50,-50,-102,-103,-50,-50,-106,-107,-50,-50,-110,-112,-113,-116,-117,-118,118,-18,-19,49,-20,-119,-119,49,49,49,49,49,49,49,49,-111,118,-42,-43,-46,-47,-48,-49,160,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,49,-44,-45,-50,49,-76,188,-98,-99,-100,-101,-88,-88,-119,-119,49,49,-50,49,49,-21,-104,-105,-108,-109,49,49,-87,-52,-53,-63,-119,-119,49,-54,-55,49,118,118,-69,257,-58,118,-69,49,-59,118,-70,-119,-70,118,-77,-79,-73,-71,-80,-85,118,-86,-72,-78,]),';':([4,5,30,31,39,40,45,47,48,49,51,52,53,54,55,56,57,60,62,63,64,69,71,72,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,103,107,108,117,118,124,125,137,139,140,141,142,143,144,145,146,147,148,168,169,170,171,172,173,174,175,176,177,192,193,194,195,200,230,239,242,268,],[-6,6,-6,-6,-119,-119,68,-23,70,-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-6,-115,106,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,-17,-119,-119,-111,-51,156,157,-119,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-22,191,-98,-99,-100,-101,-88,-88,-119,-119,-104,-105,-108,-109,212,-65,250,-64,274,]),'VAR':([6,7,8,10,42,65,68,70,102,104,106,191,221,222,],[-2,-9,12,12,-5,12,-7,-7,-18,-19,-20,-21,12,12,]),'FUNC':([6,7,8,9,10,11,14,17,25,68,70,102,104,106,191,259,269,285,289,],[-2,-9,-119,16,-119,-11,16,-10,16,-7,-7,-18,-19,-20,-21,-4,-34,-4,-33,]),'VOID':([6,7,8,9,10,11,13,14,15,16,17,25,26,27,36,68,70,102,104,106,191,259,269,285,289,],[-2,-9,-119,-119,-119,-11,24,-119,-13,29,-10,-119,-12,-15,-14,-7,-7,-18,-19,-20,-21,-4,-34,-4,-33,]),'FOR':([10,11,17,42,49,51,52,53,54,55,56,57,60,62,63,64,65,68,70,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,99,102,104,106,107,108,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,156,157,170,171,172,173,174,175,176,177,191,192,193,194,195,210,212,213,221,222,227,228,237,238,245,250,255,256,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,-5,-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-119,-7,-7,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,131,-18,-19,-20,-119,-119,-111,131,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-44,-45,-98,-99,-100,-101,-88,-88,-119,-119,-21,-104,-105,-108,-109,-87,-52,-53,-119,-119,-54,-55,131,131,-69,-58,131,-69,-59,131,-70,-119,-70,131,-77,-79,-73,-71,-80,-85,131,-86,-72,-78,]),'PRINT':([10,11,17,42,49,51,52,53,54,55,56,57,60,62,63,64,65,68,70,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,99,102,104,106,107,108,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,156,157,170,171,172,173,174,175,176,177,191,192,193,194,195,210,212,213,221,222,227,228,237,238,245,250,255,256,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,-5,-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-119,-7,-7,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,132,-18,-19,-20,-119,-119,-111,132,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-44,-45,-98,-99,-100,-101,-88,-88,-119,-119,-21,-104,-105,-108,-109,-87,-52,-53,-119,-119,-54,-55,132,132,-69,-58,132,-69,-59,132,-70,-119,-70,132,-77,-79,-73,-71,-80,-85,132,-86,-72,-78,]),'IF':([10,11,17,42,49,51,52,53,54,55,56,57,60,62,63,64,65,68,70,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,99,102,104,106,107,108,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,156,157,170,171,172,173,174,175,176,177,191,192,193,194,195,210,212,213,221,222,227,228,237,238,245,250,255,256,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,-5,-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-119,-7,-7,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,133,-18,-19,-20,-119,-119,-111,133,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-44,-45,-98,-99,-100,-101,-88,-88,-119,-119,-21,-104,-105,-108,-109,-87,-52,-53,-119,-119,-54,-55,133,133,-69,-58,133,-69,-59,133,-70,-119,-70,133,-77,-79,-73,-71,-80,-85,133,-86,-72,-78,]),'WHILE':([10,11,17,42,49,51,52,53,54,55,56,57,60,62,63,64,65,68,70,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,99,102,104,106,107,108,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,156,157,170,171,172,173,174,175,176,177,191,192,193,194,195,210,212,213,221,222,227,228,237,238,245,250,255,256,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,-5,-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-119,-7,-7,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,134,-18,-19,-20,-119,-119,-111,134,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-44,-45,-98,-99,-100,-101,-88,-88,-119,-119,-21,-104,-105,-108,-109,-87,-52,-53,-119,-119,-54,-55,134,134,-69,-58,134,-69,-59,134,-70,-119,-70,134,-77,-79,-73,-71,-80,-85,134,-86,-72,-78,]),'TRUE':([10,11,17,41,42,49,51,52,53,54,55,56,57,58,60,62,63,64,65,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,92,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,152,156,157,158,162,163,170,171,172,173,174,175,176,177,178,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,53,-5,-51,-119,-119,-95,-96,-119,-119,-119,53,-114,-51,-51,-51,-119,-7,-7,-115,-89,53,-91,-92,53,-94,-97,-50,-50,-50,-50,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,53,-18,-19,53,-20,-119,-119,53,53,53,53,-111,53,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,53,-44,-45,-50,53,-76,-98,-99,-100,-101,-88,-88,-119,-119,53,53,-50,53,53,-21,-104,-105,-108,-109,53,53,-87,-52,-53,-63,-119,-119,53,-54,-55,53,53,53,-69,-58,53,-69,53,-59,53,-70,-119,-70,53,-77,-79,-73,-71,-80,-85,53,-86,-72,-78,]),'FALSE':([10,11,17,41,42,49,51,52,53,54,55,56,57,58,60,62,63,64,65,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,88,89,92,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,152,156,157,158,162,163,170,171,172,173,174,175,176,177,178,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,54,-5,-51,-119,-119,-95,-96,-119,-119,-119,54,-114,-51,-51,-51,-119,-7,-7,-115,-89,54,-91,-92,54,-94,-97,-50,-50,-50,-50,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,54,-18,-19,54,-20,-119,-119,54,54,54,54,-111,54,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,54,-44,-45,-50,54,-76,-98,-99,-100,-101,-88,-88,-119,-119,54,54,-50,54,54,-21,-104,-105,-108,-109,54,54,-87,-52,-53,-63,-119,-119,54,-54,-55,54,54,54,-69,-58,54,-69,54,-59,54,-70,-119,-70,54,-77,-79,-73,-71,-80,-85,54,-86,-72,-78,]),'(':([10,11,17,41,42,43,44,49,51,52,53,54,55,56,57,58,60,62,63,64,65,66,67,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,100,101,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,122,123,126,127,128,129,132,133,134,139,140,141,142,143,144,145,146,147,148,149,152,156,157,158,161,162,163,170,171,172,173,174,175,176,177,178,179,182,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,58,-5,-6,-6,-51,-119,-119,-95,-96,-119,-119,-119,58,-114,-51,-51,-51,-119,-9,-9,-7,-7,-115,-89,58,-91,-92,58,-94,-97,-50,-50,-50,-50,-102,-103,-50,-50,-106,-107,-50,-50,-110,-112,-113,-116,-117,-118,58,135,136,-18,-19,58,-20,-119,-119,58,58,58,58,58,58,58,58,-111,-56,58,-42,-43,-46,-47,-48,-49,-50,162,163,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,178,58,-44,-45,-50,185,58,-76,-98,-99,-100,-101,-88,-88,-119,-119,58,197,199,58,-50,58,58,-21,-104,-105,-108,-109,58,58,-87,-52,-53,-63,-119,-119,58,-54,-55,58,58,58,-69,-58,58,-69,58,-59,58,-70,-119,-70,58,-77,-79,-73,-71,-80,-85,58,-86,-72,-78,]),'*':([10,11,17,41,42,49,51,52,53,54,55,56,57,58,60,62,63,64,65,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,152,156,157,158,162,163,170,171,172,173,174,175,176,177,178,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,59,-5,-51,-119,-119,-95,-96,-119,-119,90,59,-114,-51,-51,-51,-119,-7,-7,-115,-89,59,-91,-92,59,-94,-97,-50,-50,-50,-50,-102,-103,-50,-50,-106,-107,-50,-50,-110,-112,-113,-116,-117,-118,59,-18,-19,59,-20,-119,-119,59,59,59,59,59,59,59,59,-111,-51,59,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,59,-44,-45,-50,59,-76,-98,-99,-100,-101,-88,-88,90,90,59,59,-50,59,59,-21,-104,-105,-108,-109,59,59,-87,-52,-53,-63,-119,-119,59,-54,-55,59,59,59,-69,-58,59,-69,59,-59,59,-70,-119,-70,59,-77,-79,-73,-71,-80,-85,59,-86,-72,-78,]),'/':([10,11,17,41,42,49,51,52,53,54,55,56,57,58,60,62,63,64,65,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,152,156,157,158,162,163,170,171,172,173,174,175,176,177,178,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,61,-5,-51,-119,-119,-95,-96,-119,-119,91,61,-114,-51,-51,-51,-119,-7,-7,-115,-89,61,-91,-92,61,-94,-97,-50,-50,-50,-50,-102,-103,-50,-50,-106,-107,-50,-50,-110,-112,-113,-116,-117,-118,61,-18,-19,61,-20,-119,-119,61,61,61,61,61,61,61,61,-111,-51,61,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,61,-44,-45,-50,61,-76,-98,-99,-100,-101,-88,-88,91,91,61,61,-50,61,61,-21,-104,-105,-108,-109,61,61,-87,-52,-53,-63,-119,-119,61,-54,-55,61,61,61,-69,-58,61,-69,61,-59,61,-70,-119,-70,61,-77,-79,-73,-71,-80,-85,61,-86,-72,-78,]),'I_CONST':([10,11,17,41,42,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,152,156,157,158,162,163,170,171,172,173,174,175,176,177,178,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,62,-5,-51,-119,-119,-95,-96,-119,-119,-119,62,62,-114,62,-51,-51,-51,-119,-7,-7,-115,-89,62,-91,-92,62,-94,-97,-50,-50,-50,-50,-102,-103,-50,-50,-106,-107,-50,-50,-110,-112,-113,-116,-117,-118,62,-18,-19,62,-20,-119,-119,62,62,62,62,62,62,62,62,-111,62,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,62,-44,-45,-50,62,-76,-98,-99,-100,-101,-88,-88,-119,-119,62,62,-50,62,62,-21,-104,-105,-108,-109,62,62,-87,-52,-53,-63,-119,-119,62,-54,-55,62,62,62,-69,-58,62,-69,62,-59,62,-70,-119,-70,62,-77,-79,-73,-71,-80,-85,62,-86,-72,-78,]),'F_CONST':([10,11,17,41,42,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,152,156,157,158,162,163,170,171,172,173,174,175,176,177,178,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,63,-5,-51,-119,-119,-95,-96,-119,-119,-119,63,63,-114,63,-51,-51,-51,-119,-7,-7,-115,-89,63,-91,-92,63,-94,-97,-50,-50,-50,-50,-102,-103,-50,-50,-106,-107,-50,-50,-110,-112,-113,-116,-117,-118,63,-18,-19,63,-20,-119,-119,63,63,63,63,63,63,63,63,-111,63,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,63,-44,-45,-50,63,-76,-98,-99,-100,-101,-88,-88,-119,-119,63,63,-50,63,63,-21,-104,-105,-108,-109,63,63,-87,-52,-53,-63,-119,-119,63,-54,-55,63,63,63,-69,-58,63,-69,63,-59,63,-70,-119,-70,63,-77,-79,-73,-71,-80,-85,63,-86,-72,-78,]),'C_CONST':([10,11,17,41,42,49,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,68,70,71,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,94,95,96,97,98,99,102,104,105,106,107,108,109,110,111,112,113,114,115,116,117,120,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,152,156,157,158,162,163,170,171,172,173,174,175,176,177,178,183,184,185,187,191,192,193,194,195,199,201,210,212,213,216,221,222,224,227,228,231,237,238,245,250,255,256,258,260,266,271,276,277,280,281,283,284,287,288,290,291,292,294,295,],[-119,-11,-10,64,-5,-51,-119,-119,-95,-96,-119,-119,-119,64,64,-114,64,-51,-51,-51,-119,-7,-7,-115,-89,64,-91,-92,64,-94,-97,-50,-50,-50,-50,-102,-103,-50,-50,-106,-107,-50,-50,-110,-112,-113,-116,-117,-118,64,-18,-19,64,-20,-119,-119,64,64,64,64,64,64,64,64,-111,64,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,64,-44,-45,-50,64,-76,-98,-99,-100,-101,-88,-88,-119,-119,64,64,-50,64,64,-21,-104,-105,-108,-109,64,64,-87,-52,-53,-63,-119,-119,64,-54,-55,64,64,64,-69,-58,64,-69,64,-59,64,-70,-119,-70,64,-77,-79,-73,-71,-80,-85,64,-86,-72,-78,]),'}':([10,11,17,42,49,51,52,53,54,55,56,57,60,62,63,64,65,68,70,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,99,102,104,106,107,108,117,119,120,121,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,154,156,157,170,171,172,173,174,175,176,177,191,192,193,194,195,210,212,213,222,227,228,238,245,249,250,255,256,260,265,266,271,272,274,276,277,279,280,281,283,284,286,287,288,290,291,292,293,294,295,],[-119,-11,-10,-5,-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-119,-7,-7,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,-119,-18,-19,-20,-119,-119,-111,153,-119,-41,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-40,-44,-45,-98,-99,-100,-101,-88,-88,-119,-119,-21,-104,-105,-108,-109,-87,-52,-53,-119,-54,-55,-119,-69,259,-58,-119,-69,-59,271,-119,-70,277,-32,-119,-70,285,-119,-77,-79,-73,290,-71,-80,-85,-119,-86,294,-72,-78,]),'RETURN':([10,11,17,49,51,52,53,54,55,56,57,60,62,63,64,68,70,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,102,104,106,107,108,117,120,121,122,123,126,127,128,129,139,140,141,142,143,144,145,146,147,148,154,156,157,170,171,172,173,174,175,176,177,191,192,193,194,195,210,212,213,221,227,228,237,248,250,260,271,276,277,281,283,284,288,290,292,294,295,],[-119,-11,-10,-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-7,-7,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,-18,-19,-20,-119,-119,-111,-119,-41,-42,-43,-46,-47,-48,-49,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-40,-44,-45,-98,-99,-100,-101,-88,-88,-119,-119,-21,-104,-105,-108,-109,-87,-52,-53,-119,-54,-55,-119,258,-58,-59,-70,-119,-70,-77,-79,-73,-80,-85,-86,-72,-78,]),'DATAFRAME':([12,],[20,]),'INT':([12,16,135,136,235,],[21,21,21,21,21,]),'FLOAT':([12,16,135,136,235,],[22,22,22,22,22,]),'CHAR':([12,16,135,136,235,],[23,23,23,23,23,]),'MAIN':([24,],[35,]),',':([30,31,39,40,49,51,52,53,54,55,56,57,60,62,63,64,69,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,103,107,108,117,137,139,140,141,142,143,144,145,146,147,148,170,171,172,173,174,175,176,177,188,192,193,194,195,196,202,203,206,209,214,220,240,243,244,251,253,254,257,267,273,],[-6,-6,46,46,-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-6,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,-17,-119,-119,-111,46,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-98,-99,-100,-101,-88,-88,-119,-119,-6,-104,-105,-108,-109,-57,-62,216,-8,224,216,235,-57,-62,-62,224,216,216,-6,-8,235,]),'[':([31,72,118,160,],[41,105,152,152,]),'{':([35,207,208,232,246,275,282,],[42,221,222,245,256,280,287,]),'+':([49,56,57,60,62,63,64,71,89,92,94,95,96,97,98,117,118,145,146,147,148,176,177,194,195,],[-51,86,-119,-114,-51,-51,-51,-115,-107,-110,-112,-113,-116,-117,-118,-111,-51,86,86,-88,-88,-119,-119,-108,-109,]),'-':([49,56,57,60,62,63,64,71,89,92,94,95,96,97,98,117,118,145,146,147,148,176,177,194,195,],[-51,87,-119,-114,-51,-51,-51,-115,-107,-110,-112,-113,-116,-117,-118,-111,-51,87,87,-88,-88,-119,-119,-108,-109,]),'>':([49,55,56,57,60,62,63,64,71,85,88,89,92,94,95,96,97,98,117,118,145,146,147,148,174,175,176,177,192,193,194,195,],[-51,80,-119,-119,-114,-51,-51,-51,-115,-103,-106,-107,-110,-112,-113,-116,-117,-118,-111,-51,-119,-119,-88,-88,-88,-88,-119,-119,-104,-105,-108,-109,]),'<':([49,55,56,57,60,62,63,64,71,85,88,89,92,94,95,96,97,98,117,118,145,146,147,148,174,175,176,177,192,193,194,195,],[-51,81,-119,-119,-114,-51,-51,-51,-115,-103,-106,-107,-110,-112,-113,-116,-117,-118,-111,-51,-119,-119,-88,-88,-88,-88,-119,-119,-104,-105,-108,-109,]),'DIFFERENT':([49,55,56,57,60,62,63,64,71,85,88,89,92,94,95,96,97,98,117,118,145,146,147,148,174,175,176,177,192,193,194,195,],[-51,82,-119,-119,-114,-51,-51,-51,-115,-103,-106,-107,-110,-112,-113,-116,-117,-118,-111,-51,-119,-119,-88,-88,-88,-88,-119,-119,-104,-105,-108,-109,]),'EQUAL':([49,55,56,57,60,62,63,64,71,85,88,89,92,94,95,96,97,98,117,118,145,146,147,148,174,175,176,177,192,193,194,195,],[-51,83,-119,-119,-114,-51,-51,-51,-115,-103,-106,-107,-110,-112,-113,-116,-117,-118,-111,-51,-119,-119,-88,-88,-88,-88,-119,-119,-104,-105,-108,-109,]),'AND':([49,52,53,54,55,56,57,60,62,63,64,71,79,84,85,88,89,92,94,95,96,97,98,108,117,118,141,142,143,144,145,146,147,148,170,171,172,173,174,175,176,177,192,193,194,195,],[-51,77,-95,-96,-119,-119,-119,-114,-51,-51,-51,-115,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,77,-111,-51,-88,-88,-88,-88,-119,-119,-88,-88,-98,-99,-100,-101,-88,-88,-119,-119,-104,-105,-108,-109,]),'OR':([49,51,52,53,54,55,56,57,60,62,63,64,71,76,78,79,84,85,88,89,92,94,95,96,97,98,107,108,117,118,140,141,142,143,144,145,146,147,148,170,171,172,173,174,175,176,177,192,193,194,195,],[-51,74,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-115,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,74,-119,-111,-51,-93,-88,-88,-88,-88,-119,-119,-88,-88,-98,-99,-100,-101,-88,-88,-119,-119,-104,-105,-108,-109,]),']':([49,50,51,52,53,54,55,56,57,60,62,63,64,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,107,108,117,138,139,140,141,142,143,144,145,146,147,148,170,171,172,173,174,175,176,177,180,192,193,194,195,],[-51,72,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,-119,-119,-111,169,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-98,-99,-100,-101,-88,-88,-119,-119,198,-104,-105,-108,-109,]),')':([49,51,52,53,54,55,56,57,60,62,63,64,71,73,75,76,78,79,84,85,88,89,92,93,94,95,96,97,98,107,108,117,135,136,139,140,141,142,143,144,145,146,147,148,165,166,167,170,171,172,173,174,175,176,177,186,188,189,190,192,193,194,195,196,197,202,203,204,205,206,209,211,214,215,217,218,219,220,223,225,226,229,233,234,236,240,241,243,244,251,252,253,254,257,261,263,264,267,273,278,],[-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,117,-112,-113,-116,-117,-118,-119,-119,-111,-119,-119,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,-35,-37,-35,-98,-99,-100,-101,-88,-88,-119,-119,-74,-6,207,208,-104,-105,-108,-109,-57,210,-62,-119,-75,-74,-8,-119,-81,-119,230,-68,232,-75,-119,239,-61,-82,242,246,-36,-39,-57,-84,-62,-62,-119,262,-119,-119,-6,-60,-66,-67,-8,-119,-38,]),'TO':([49,51,52,53,54,55,56,57,60,62,63,64,71,73,75,76,78,79,84,85,88,89,92,94,95,96,97,98,107,108,117,122,139,140,141,142,143,144,145,146,147,148,155,170,171,172,173,174,175,176,177,192,193,194,195,212,213,227,228,],[-51,-119,-119,-95,-96,-119,-119,-119,-114,-51,-51,-51,-115,-89,-91,-92,-94,-97,-102,-103,-106,-107,-110,-112,-113,-116,-117,-118,-119,-119,-111,-81,-90,-93,-88,-88,-88,-88,-119,-119,-88,-88,182,-98,-99,-100,-101,-88,-88,-119,-119,-104,-105,-108,-109,-52,-53,-54,-55,]),'.':([118,],[150,]),'=':([118,130,151,159,160,198,],[-24,158,-25,184,-24,-26,]),'DESCRIBE':([150,],[179,]),'TITLE':([185,216,231,],[203,-63,244,]),'DO':([262,270,],[-83,275,]),'ELSE':([271,276,],[-70,282,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'add_type':([2,21,22,23,29,],[3,32,33,34,38,]),'add_id':([4,30,31,43,44,69,188,257,],[5,39,40,66,67,103,206,267,]),'go_to_main':([6,],[7,]),'save_function':([7,66,67,],[8,100,101,]),'VARS_PRIME':([8,10,65,221,222,],[9,17,99,237,238,]),'VARS':([8,10,65,221,222,],[10,10,10,10,10,]),'empty':([8,9,10,14,25,39,40,51,52,55,56,57,65,99,107,108,120,135,136,137,145,146,176,177,203,209,214,220,221,222,237,238,251,253,254,255,266,273,276,280,291,],[11,15,11,27,27,47,47,75,78,84,88,92,11,121,75,78,121,166,166,47,88,88,92,92,217,225,217,236,11,11,121,121,225,217,217,121,121,236,283,121,121,]),'FUNCTION_PRIME':([9,],[13,]),'FUNCTION':([9,14,25,],[14,25,25,]),'TIPO_COMP':([12,],[18,]),'TIPO_SIMPLE':([12,16,135,136,235,],[19,28,164,164,247,]),'FUNC_PRIME':([14,25,],[26,36,]),'add_function_type':([28,],[37,]),'TIPO_PRIME':([39,40,137,],[45,48,168,]),'EXPRESSION':([41,58,99,105,120,152,162,178,183,185,187,199,201,224,231,237,238,255,258,266,280,291,],[50,93,124,138,124,180,186,196,200,202,205,211,213,240,243,124,124,124,268,124,124,124,]),'AND_EXP':([41,58,74,99,105,120,152,162,178,183,185,187,199,201,224,231,237,238,255,258,266,280,291,],[51,51,107,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'B_EXP':([41,58,74,77,99,105,109,110,111,112,120,152,162,178,183,185,187,199,201,224,231,237,238,255,258,266,280,291,],[52,52,52,108,52,52,141,142,143,144,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'EXP':([41,58,74,77,99,105,109,110,111,112,120,152,162,178,183,185,187,199,201,224,231,237,238,255,258,266,280,291,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'TERM':([41,58,74,77,99,105,109,110,111,112,113,114,120,152,162,178,183,185,187,199,201,224,231,237,238,255,258,266,280,291,],[56,56,56,56,56,56,56,56,56,56,145,146,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'FACTOR':([41,58,74,77,99,105,109,110,111,112,113,114,115,116,120,152,162,178,183,185,187,199,201,224,231,237,238,255,258,266,280,291,],[57,57,57,57,57,57,57,57,57,57,57,57,147,148,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'VAR_CT':([41,58,59,61,74,77,99,105,109,110,111,112,113,114,115,116,120,152,162,178,183,185,187,199,201,224,231,237,238,255,258,266,280,291,],[60,60,94,95,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'fill_go_to_main_quad':([42,],[65,]),'add_operand':([49,62,63,64,118,],[71,96,97,98,71,]),'EXPRESSION_PRIME':([51,107,],[73,139,]),'AND_EXP_PRIME':([52,108,],[76,140,]),'B_EXP_PRIME':([55,],[79,]),'EXP_PRIME':([56,145,146,],[85,174,175,]),'TERM_PRIME':([57,176,177,],[89,194,195,]),'save_ids':([68,70,],[102,104,]),'add_operator':([80,81,82,83,86,87,90,91,132,158,184,],[109,110,111,112,113,114,115,116,161,183,201,]),'BLOCK':([99,120,237,238,255,266,280,291,],[119,154,248,249,265,272,286,293,]),'STATEMENT':([99,120,237,238,255,266,280,291,],[120,120,120,120,120,120,120,120,]),'ASSIGNATION':([99,120,237,238,255,266,280,291,],[122,122,122,122,122,122,122,122,]),'FUNC_CALL':([99,120,237,238,255,266,280,291,],[123,123,123,123,123,123,123,123,]),'WRITE':([99,120,237,238,255,266,280,291,],[125,125,125,125,125,125,125,125,]),'CONDITION':([99,120,237,238,255,266,280,291,],[126,126,126,126,126,126,126,126,]),'WHILE_STMT':([99,120,237,238,255,266,280,291,],[127,127,127,127,127,127,127,127,]),'FOR_STMT':([99,120,237,238,255,266,280,291,],[128,128,128,128,128,128,128,128,]),'DESCRIBE_STMT':([99,120,237,238,255,266,280,291,],[129,129,129,129,129,129,129,129,]),'VARIABLE':([99,120,131,237,238,255,266,280,291,],[130,130,159,130,130,130,130,130,130,]),'add_current_type':([103,],[137,]),'era_quad':([118,],[149,]),'get_variable':([118,160,],[151,151,]),'check_exact_type_for':([122,211,],[155,226,]),'PARAM':([135,136,],[165,167,]),'aritmetics_operation':([141,142,143,144,147,148,174,175,],[170,171,172,173,176,177,192,193,]),'empty_global_variables_table':([153,],[181,]),'append_jump':([163,],[187,]),'add_parameters':([165,167,],[189,190,]),'pop_operand':([186,205,],[204,219,]),'param_quad':([196,240,],[209,251,]),'print_quad':([202,243,244,],[214,253,254,]),'WRITE_PRIME':([203,214,253,254,],[215,229,263,264,]),'pop_type':([204,219,],[218,233,]),'save_parameter':([206,267,],[220,273,]),'FUNC_CALL_PRIME':([209,251,],[223,261,]),'add_assignation_quad':([212,],[227,]),'add_assignation_for_quad':([213,],[228,]),'add_print_operator':([216,],[231,]),'PARAM_PRIME':([220,273,],[234,278,]),'add_final_counter_for':([226,],[241,]),'check_boolean_expression_for':([241,],[252,]),'go_to_false_quad':([245,256,],[255,266,]),'go_sub_quad':([250,],[260,]),'empty_local_variables_table':([259,285,],[269,289,]),'generate_for_quad':([262,],[270,]),'fill_go_to_false_quad':([271,277,],[276,284,]),'save_function_as_global_variable':([274,],[279,]),'ELSE_STMT':([276,],[281,]),'go_to_quad':([284,],[288,]),'go_to_true_quad':([287,],[291,]),'end_for':([290,],[292,]),'fill_go_to_true_quad':([294,],[295,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> PROG add_type ID add_id ; go_to_main save_function VARS_PRIME FUNCTION_PRIME VOID MAIN { fill_go_to_main_quad VARS_PRIME BLOCK } empty_global_variables_table','PROGRAM',17,'p_PROGRAM','parser.py',9),
  ('go_to_main -> <empty>','go_to_main',0,'p_go_to_main','parser.py',14),
  ('empty_global_variables_table -> <empty>','empty_global_variables_table',0,'p_empty_global_variables_table','parser.py',18),
  ('empty_local_variables_table -> <empty>','empty_local_variables_table',0,'p_empty_local_variables_table','parser.py',22),
  ('fill_go_to_main_quad -> <empty>','fill_go_to_main_quad',0,'p_fill_go_to_main_quad','parser.py',26),
  ('add_id -> <empty>','add_id',0,'p_add_id','parser.py',30),
  ('save_ids -> <empty>','save_ids',0,'p_save_ids','parser.py',34),
  ('save_parameter -> <empty>','save_parameter',0,'p_save_parameter','parser.py',38),
  ('save_function -> <empty>','save_function',0,'p_save_function','parser.py',42),
  ('VARS_PRIME -> VARS VARS_PRIME','VARS_PRIME',2,'p_VARS_PRIME','parser.py',47),
  ('VARS_PRIME -> empty','VARS_PRIME',1,'p_VARS_PRIME','parser.py',48),
  ('FUNCTION_PRIME -> FUNCTION FUNC_PRIME','FUNCTION_PRIME',2,'p_FUNCTION_PRIME','parser.py',54),
  ('FUNCTION_PRIME -> empty','FUNCTION_PRIME',1,'p_FUNCTION_PRIME','parser.py',55),
  ('FUNC_PRIME -> FUNCTION FUNC_PRIME','FUNC_PRIME',2,'p_FUNC','parser.py',61),
  ('FUNC_PRIME -> empty','FUNC_PRIME',1,'p_FUNC','parser.py',62),
  ('add_type -> <empty>','add_type',0,'p_add_type','parser.py',67),
  ('add_current_type -> <empty>','add_current_type',0,'p_add_current_type','parser.py',71),
  ('VARS -> VAR TIPO_COMP ID add_id TIPO_PRIME ; save_ids','VARS',7,'p_VARS','parser.py',76),
  ('VARS -> VAR TIPO_SIMPLE ID add_id TIPO_PRIME ; save_ids','VARS',7,'p_VARS','parser.py',77),
  ('VARS -> VAR TIPO_SIMPLE ID [ EXPRESSION ] ;','VARS',7,'p_VARS','parser.py',78),
  ('VARS -> VAR TIPO_SIMPLE ID [ EXPRESSION ] [ EXPRESSION ] ;','VARS',10,'p_VARS','parser.py',79),
  ('TIPO_PRIME -> , ID add_id add_current_type TIPO_PRIME','TIPO_PRIME',5,'p_TIPO_PRIME','parser.py',85),
  ('TIPO_PRIME -> empty','TIPO_PRIME',1,'p_TIPO_PRIME','parser.py',86),
  ('get_variable -> <empty>','get_variable',0,'p_get_variable','parser.py',91),
  ('VARIABLE -> ID get_variable','VARIABLE',2,'p_VARIABLE','parser.py',96),
  ('VARIABLE -> ID [ EXPRESSION ]','VARIABLE',4,'p_VARIABLE','parser.py',97),
  ('TIPO_SIMPLE -> INT add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',103),
  ('TIPO_SIMPLE -> FLOAT add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',104),
  ('TIPO_SIMPLE -> CHAR add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',105),
  ('TIPO_COMP -> DATAFRAME','TIPO_COMP',1,'p_TIPO_COMP','parser.py',111),
  ('add_function_type -> <empty>','add_function_type',0,'p_add_function_type','parser.py',116),
  ('save_function_as_global_variable -> <empty>','save_function_as_global_variable',0,'p_save_function_as_global_variable','parser.py',120),
  ('FUNCTION -> FUNC TIPO_SIMPLE add_function_type ID add_id save_function ( PARAM add_parameters ) { VARS_PRIME BLOCK RETURN EXPRESSION ; save_function_as_global_variable } empty_local_variables_table','FUNCTION',19,'p_FUNCTION','parser.py',125),
  ('FUNCTION -> FUNC VOID add_type ID add_id save_function ( PARAM add_parameters ) { VARS_PRIME BLOCK } empty_local_variables_table','FUNCTION',15,'p_FUNCTION','parser.py',126),
  ('add_parameters -> <empty>','add_parameters',0,'p_add_parameters','parser.py',131),
  ('PARAM -> TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME','PARAM',5,'p_PARAM','parser.py',136),
  ('PARAM -> empty','PARAM',1,'p_PARAM','parser.py',137),
  ('PARAM_PRIME -> , TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME','PARAM_PRIME',6,'p_PARAM_PRIME','parser.py',143),
  ('PARAM_PRIME -> empty','PARAM_PRIME',1,'p_PARAM_PRIME','parser.py',144),
  ('BLOCK -> STATEMENT BLOCK','BLOCK',2,'p_BLOCK','parser.py',150),
  ('BLOCK -> empty','BLOCK',1,'p_BLOCK','parser.py',151),
  ('STATEMENT -> ASSIGNATION','STATEMENT',1,'p_STATEMENT','parser.py',157),
  ('STATEMENT -> FUNC_CALL','STATEMENT',1,'p_STATEMENT','parser.py',158),
  ('STATEMENT -> EXPRESSION ;','STATEMENT',2,'p_STATEMENT','parser.py',159),
  ('STATEMENT -> WRITE ;','STATEMENT',2,'p_STATEMENT','parser.py',160),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',161),
  ('STATEMENT -> WHILE_STMT','STATEMENT',1,'p_STATEMENT','parser.py',162),
  ('STATEMENT -> FOR_STMT','STATEMENT',1,'p_STATEMENT','parser.py',163),
  ('STATEMENT -> DESCRIBE_STMT','STATEMENT',1,'p_STATEMENT','parser.py',164),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','parser.py',169),
  ('add_operand -> <empty>','add_operand',0,'p_add_operand','parser.py',173),
  ('add_assignation_quad -> <empty>','add_assignation_quad',0,'p_add_assignation_quad','parser.py',177),
  ('add_assignation_for_quad -> <empty>','add_assignation_for_quad',0,'p_add_assignation_for_quad','parser.py',181),
  ('ASSIGNATION -> VARIABLE = add_operator EXPRESSION ; add_assignation_quad','ASSIGNATION',6,'p_ASSIGNATION','parser.py',186),
  ('ASSIGNATION -> FOR VARIABLE = add_operator EXPRESSION add_assignation_for_quad','ASSIGNATION',6,'p_ASSIGNATION','parser.py',187),
  ('era_quad -> <empty>','era_quad',0,'p_era_quad','parser.py',192),
  ('param_quad -> <empty>','param_quad',0,'p_param_quad','parser.py',196),
  ('go_sub_quad -> <empty>','go_sub_quad',0,'p_go_sub_quad','parser.py',200),
  ('FUNC_CALL -> ID era_quad ( EXPRESSION param_quad FUNC_CALL_PRIME ) ; go_sub_quad','FUNC_CALL',9,'p_FUNC_CALL','parser.py',205),
  ('FUNC_CALL_PRIME -> , EXPRESSION param_quad FUNC_CALL_PRIME','FUNC_CALL_PRIME',4,'p_FUNC_CALL_PRIME','parser.py',211),
  ('FUNC_CALL_PRIME -> empty','FUNC_CALL_PRIME',1,'p_FUNC_CALL_PRIME','parser.py',212),
  ('print_quad -> <empty>','print_quad',0,'p_print_quad','parser.py',217),
  ('add_print_operator -> <empty>','add_print_operator',0,'p_add_print_operator','parser.py',221),
  ('WRITE -> PRINT add_operator ( EXPRESSION print_quad WRITE_PRIME )','WRITE',7,'p_WRITE','parser.py',226),
  ('WRITE -> PRINT add_operator ( TITLE WRITE_PRIME )','WRITE',6,'p_WRITE','parser.py',227),
  ('WRITE_PRIME -> , add_print_operator EXPRESSION print_quad WRITE_PRIME','WRITE_PRIME',5,'p_WRITE_PRIME','parser.py',233),
  ('WRITE_PRIME -> , add_print_operator TITLE print_quad WRITE_PRIME','WRITE_PRIME',5,'p_WRITE_PRIME','parser.py',234),
  ('WRITE_PRIME -> empty','WRITE_PRIME',1,'p_WRITE_PRIME','parser.py',235),
  ('go_to_false_quad -> <empty>','go_to_false_quad',0,'p_go_to_false_quad','parser.py',240),
  ('fill_go_to_false_quad -> <empty>','fill_go_to_false_quad',0,'p_fill_go_to_false_quad','parser.py',244),
  ('go_to_true_quad -> <empty>','go_to_true_quad',0,'p_go_to_true_quad','parser.py',248),
  ('fill_go_to_true_quad -> <empty>','fill_go_to_true_quad',0,'p_fill_go_to_true_quad','parser.py',252),
  ('go_to_quad -> <empty>','go_to_quad',0,'p_go_to_quad','parser.py',256),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',260),
  ('pop_type -> <empty>','pop_type',0,'p_pop_type','parser.py',264),
  ('append_jump -> <empty>','append_jump',0,'p_append_jump','parser.py',268),
  ('CONDITION -> IF ( EXPRESSION pop_operand pop_type ) { go_to_false_quad BLOCK } fill_go_to_false_quad ELSE_STMT','CONDITION',12,'p_CONDITION','parser.py',273),
  ('ELSE_STMT -> ELSE { go_to_true_quad BLOCK } fill_go_to_true_quad','ELSE_STMT',6,'p_ELSE_STMT','parser.py',279),
  ('ELSE_STMT -> empty','ELSE_STMT',1,'p_ELSE_STMT','parser.py',280),
  ('WHILE_STMT -> WHILE ( append_jump EXPRESSION pop_operand pop_type ) { go_to_false_quad BLOCK } fill_go_to_false_quad go_to_quad','WHILE_STMT',13,'p_WHILE_STMT','parser.py',286),
  ('check_exact_type_for -> <empty>','check_exact_type_for',0,'p_check_exact_type_for','parser.py',291),
  ('add_final_counter_for -> <empty>','add_final_counter_for',0,'p_add_final_counter_for','parser.py',295),
  ('generate_for_quad -> <empty>','generate_for_quad',0,'p_generate_for_quad','parser.py',299),
  ('check_boolean_expression_for -> <empty>','check_boolean_expression_for',0,'p_check_boolean_expression_for','parser.py',303),
  ('end_for -> <empty>','end_for',0,'p_end_for','parser.py',307),
  ('FOR_STMT -> ASSIGNATION check_exact_type_for TO ( EXPRESSION check_exact_type_for add_final_counter_for check_boolean_expression_for ) generate_for_quad DO { BLOCK } end_for','FOR_STMT',15,'p_FOR_STMT','parser.py',312),
  ('DESCRIBE_STMT -> ID . DESCRIBE ( )','DESCRIBE_STMT',5,'p_DESCRIBE_STMT','parser.py',318),
  ('aritmetics_operation -> <empty>','aritmetics_operation',0,'p_aritmetics_operation','parser.py',323),
  ('EXPRESSION -> AND_EXP EXPRESSION_PRIME','EXPRESSION',2,'p_EXPRESSION','parser.py',328),
  ('EXPRESSION_PRIME -> OR AND_EXP EXPRESSION_PRIME','EXPRESSION_PRIME',3,'p_EXPRESSION_PRIME','parser.py',334),
  ('EXPRESSION_PRIME -> empty','EXPRESSION_PRIME',1,'p_EXPRESSION_PRIME','parser.py',335),
  ('AND_EXP -> B_EXP AND_EXP_PRIME','AND_EXP',2,'p_AND_EXP','parser.py',341),
  ('AND_EXP_PRIME -> AND B_EXP AND_EXP_PRIME','AND_EXP_PRIME',3,'p_AND_EXP_PRIME','parser.py',347),
  ('AND_EXP_PRIME -> empty','AND_EXP_PRIME',1,'p_AND_EXP_PRIME','parser.py',348),
  ('B_EXP -> TRUE','B_EXP',1,'p_B_EXP','parser.py',354),
  ('B_EXP -> FALSE','B_EXP',1,'p_B_EXP','parser.py',355),
  ('B_EXP -> EXP B_EXP_PRIME','B_EXP',2,'p_B_EXP','parser.py',356),
  ('B_EXP_PRIME -> > add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',362),
  ('B_EXP_PRIME -> < add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',363),
  ('B_EXP_PRIME -> DIFFERENT add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',364),
  ('B_EXP_PRIME -> EQUAL add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',365),
  ('B_EXP_PRIME -> empty','B_EXP_PRIME',1,'p_B_EXP_PRIME','parser.py',366),
  ('EXP -> TERM EXP_PRIME','EXP',2,'p_EXP','parser.py',372),
  ('EXP_PRIME -> + add_operator TERM EXP_PRIME aritmetics_operation','EXP_PRIME',5,'p_EXP_PRIME','parser.py',378),
  ('EXP_PRIME -> - add_operator TERM EXP_PRIME aritmetics_operation','EXP_PRIME',5,'p_EXP_PRIME','parser.py',379),
  ('EXP_PRIME -> empty','EXP_PRIME',1,'p_EXP_PRIME','parser.py',380),
  ('TERM -> FACTOR TERM_PRIME','TERM',2,'p_TERM','parser.py',386),
  ('TERM_PRIME -> * add_operator FACTOR aritmetics_operation TERM_PRIME','TERM_PRIME',5,'p_TERM_PRIME','parser.py',392),
  ('TERM_PRIME -> / add_operator FACTOR aritmetics_operation TERM_PRIME','TERM_PRIME',5,'p_TERM_PRIME','parser.py',393),
  ('TERM_PRIME -> empty','TERM_PRIME',1,'p_TERM_PRIME','parser.py',394),
  ('FACTOR -> ( EXPRESSION )','FACTOR',3,'p_FACTOR','parser.py',400),
  ('FACTOR -> * VAR_CT','FACTOR',2,'p_FACTOR','parser.py',401),
  ('FACTOR -> / VAR_CT','FACTOR',2,'p_FACTOR','parser.py',402),
  ('FACTOR -> VAR_CT','FACTOR',1,'p_FACTOR','parser.py',403),
  ('VAR_CT -> ID add_operand','VAR_CT',2,'p_VAR_CT','parser.py',409),
  ('VAR_CT -> I_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',410),
  ('VAR_CT -> F_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',411),
  ('VAR_CT -> C_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',412),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',421),
]
