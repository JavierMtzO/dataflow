
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR C_CONST DATAFRAME DESCRIBE DIFFERENT DO ELSE EQUAL FALSE FLOAT FOR FUNC F_CONST ID IF INT I_CONST MAIN OR PRINT PROG RETURN TITLE TO TRUE VAR VOID WHILE\n    PROGRAM : PROG add_type ID add_id ';' go_to_main save_function VARS_PRIME FUNCTION_PRIME VOID MAIN '{' fill_go_to_main_quad VARS_PRIME BLOCK '}' empty_global_variables_table\n    go_to_main : empty_global_variables_table : empty_local_variables_table : fill_go_to_main_quad : add_id : save_ids : save_parameter : save_function : \n    VARS_PRIME : VARS VARS_PRIME\n               | empty\n    \n    FUNCTION_PRIME : FUNCTION FUNC_PRIME\n                   | empty\n    \n    FUNC_PRIME : FUNCTION FUNC_PRIME\n         | empty\n    add_type : add_current_type : check_for_array_length : save_array : save_matrix : \n    VARS : VAR TIPO_COMP ID add_id TIPO_PRIME ';' save_ids\n         | VAR TIPO_SIMPLE ID add_id TIPO_PRIME ';' save_ids\n         | VAR TIPO_SIMPLE ID add_id '[' EXPRESSION ']' check_for_array_length ';' save_array\n         | VAR TIPO_SIMPLE ID add_id '[' EXPRESSION ']' check_for_array_length '[' EXPRESSION ']' check_for_array_length ';' save_matrix\n    \n    TIPO_PRIME : ',' ID add_id add_current_type TIPO_PRIME\n               | empty\n    get_variable : ver_quad_dimension_one_array : ver_quad_dimension_one_matrix : ver_quad_dimension_two_matrix : \n    VARIABLE : ID get_variable\n             | ID add_id '[' EXPRESSION ']' ver_quad_dimension_one_array\n             | ID add_id '[' EXPRESSION ']' ver_quad_dimension_one_matrix '[' EXPRESSION ']' ver_quad_dimension_two_matrix\n    \n    TIPO_SIMPLE : INT add_type\n                | FLOAT add_type\n                | CHAR add_type\n    \n    TIPO_COMP : DATAFRAME\n    add_function_type : save_function_as_variable : return_quad : \n    FUNCTION : FUNC TIPO_SIMPLE add_function_type ID add_id save_function '(' PARAM add_parameters ')' save_function_as_variable '{' VARS_PRIME BLOCK RETURN EXPRESSION ';' return_quad '}' empty_local_variables_table\n             | FUNC VOID add_type ID add_id save_function '(' PARAM add_parameters ')' '{' VARS_PRIME BLOCK '}' empty_local_variables_table\n    add_parameters : \n    PARAM : TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME\n          | empty\n    \n    PARAM_PRIME : ',' TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME\n                | empty\n    \n    BLOCK : STATEMENT BLOCK\n          | empty\n    \n    STATEMENT : ASSIGNATION\n              | FUNC_CALL\n              | EXPRESSION ';'\n              | WRITE ';'\n              | CONDITION\n              | WHILE_STMT\n              | FOR_STMT\n              | DESCRIBE_STMT\n    add_operator : add_operand : add_assignation_quad : add_assignation_for_quad : functions_assignation : \n    ASSIGNATION : VARIABLE '=' add_operator EXPRESSION ';' add_assignation_quad\n                | FOR VARIABLE '=' add_operator EXPRESSION add_assignation_for_quad\n                | VARIABLE '=' add_operator FUNC_CALL functions_assignation add_assignation_quad\n    era_quad : param_quad : go_sub_quad : \n    FUNC_CALL : FUNC ID era_quad '(' EXPRESSION param_quad FUNC_CALL_PRIME ')' go_sub_quad\n    \n    FUNC_CALL_PRIME : ',' EXPRESSION param_quad FUNC_CALL_PRIME\n                    | empty\n    print_quad : add_print_operator : \n    WRITE : PRINT add_operator '(' EXPRESSION print_quad WRITE_PRIME ')'\n               | PRINT add_operator '(' TITLE WRITE_PRIME ')'\n    \n    WRITE_PRIME : ',' add_print_operator EXPRESSION print_quad WRITE_PRIME\n                | ',' add_print_operator TITLE print_quad WRITE_PRIME\n                | empty\n    go_to_false_quad : fill_go_to_false_quad : fill_go_to_false_quad_if : go_to_true_quad : fill_go_to_true_quad : go_to_quad : pop_operand : pop_type : append_jump : \n    CONDITION : IF '(' EXPRESSION pop_type ')' '{' go_to_false_quad BLOCK '}' fill_go_to_false_quad_if ELSE_STMT\n    \n    ELSE_STMT : ELSE '{' go_to_true_quad BLOCK '}' fill_go_to_true_quad\n              | empty pop_operand\n    \n    WHILE_STMT : WHILE '(' append_jump EXPRESSION pop_type ')' '{' go_to_false_quad  BLOCK '}' fill_go_to_false_quad go_to_quad pop_operand\n    check_exact_type_for : add_final_counter_for : generate_for_quad : check_boolean_expression_for : end_for : \n    FOR_STMT : ASSIGNATION check_exact_type_for TO '(' EXPRESSION check_exact_type_for add_final_counter_for check_boolean_expression_for ')' generate_for_quad DO '{' BLOCK '}' end_for\n    \n    DESCRIBE_STMT : ID '.' DESCRIBE '(' ')' \n    aritmetics_operation : \n    EXPRESSION : AND_EXP EXPRESSION_PRIME\n    \n    EXPRESSION_PRIME : OR AND_EXP EXPRESSION_PRIME\n                     | empty\n    \n    AND_EXP : B_EXP AND_EXP_PRIME\n    \n    AND_EXP_PRIME : AND B_EXP AND_EXP_PRIME\n                  | empty\n    \n    B_EXP : TRUE\n          | FALSE\n          | EXP B_EXP_PRIME\n    \n    B_EXP_PRIME : '>' add_operator B_EXP aritmetics_operation\n                | '<' add_operator B_EXP aritmetics_operation\n                | DIFFERENT add_operator B_EXP aritmetics_operation\n                | EQUAL add_operator B_EXP aritmetics_operation\n                | empty\n    \n    EXP : TERM EXP_PRIME\n    \n    EXP_PRIME : '+' add_operator TERM EXP_PRIME aritmetics_operation\n              | '-' add_operator TERM EXP_PRIME aritmetics_operation\n              | empty\n    \n    TERM : FACTOR TERM_PRIME\n    \n    TERM_PRIME : '*' add_operator FACTOR aritmetics_operation TERM_PRIME \n                  | '/' add_operator FACTOR aritmetics_operation TERM_PRIME \n                  | empty\n    \n    FACTOR : '(' EXPRESSION ')'\n              | '*' VAR_CT\n              | '/' VAR_CT\n              | VAR_CT\n    \n    VAR_CT : ID add_operand\n           | I_CONST add_operand\n           | F_CONST add_operand\n           | C_CONST add_operand\n           | FUNC_CALL\n           | ID add_id '[' EXPRESSION ']' ver_quad_dimension_one_array\n           | ID add_id '[' EXPRESSION ']' ver_quad_dimension_one_matrix '[' EXPRESSION ']' ver_quad_dimension_two_matrix\n    empty :"
    
_lr_action_items = {'PROG':([0,],[2,]),'$end':([1,146,178,],[0,-3,-1,]),'ID':([2,3,10,11,17,18,19,20,21,22,23,28,29,32,33,34,37,38,41,45,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,122,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,157,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,226,227,228,232,238,239,242,247,248,249,253,254,259,260,262,263,265,272,273,274,275,277,278,279,283,287,291,298,301,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-16,4,-133,-11,-10,30,31,-37,-16,-16,-16,-38,-16,-34,-35,-36,42,43,-5,53,55,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,55,55,-125,55,-59,-59,-59,-130,108,109,-21,-22,-126,-100,55,-102,-103,55,-105,-108,-58,-58,-58,-58,-113,-114,-58,-58,-117,-118,-58,-58,-121,-123,-124,-127,-128,-129,109,-50,-51,-54,-55,-56,-57,153,55,-133,-133,55,55,55,55,55,55,55,55,-122,-52,-53,-58,55,-87,186,55,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,55,55,55,-58,55,55,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,55,-62,55,55,-131,-115,-116,-119,-120,-98,-60,-60,-61,-73,-133,55,55,-63,-65,-64,55,-79,-133,109,-20,-68,55,109,-79,288,109,-30,-24,-69,55,109,-132,-81,55,-133,-80,-88,-85,-84,109,-82,-90,-85,109,-91,-96,-97,-83,-89,]),';':([4,5,30,31,39,40,44,46,47,53,55,57,58,59,60,61,62,63,66,68,69,70,71,77,79,81,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,109,114,115,116,128,130,131,132,141,161,165,166,167,168,169,170,171,172,173,174,189,192,193,194,195,196,197,198,199,204,205,215,217,218,219,220,221,224,240,244,252,263,269,277,279,291,293,303,309,],[-6,6,-6,-6,-133,-133,52,-26,54,-6,-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-17,-126,-18,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,-59,-130,149,150,-133,164,-133,-133,-122,-25,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-109,-110,-111,-112,-99,-99,-133,-133,226,-130,-131,-18,-115,-116,-119,-120,-28,262,-131,-75,-68,-74,-30,-69,-132,-30,-132,317,]),'VAR':([6,7,8,10,41,49,52,54,76,78,164,191,238,259,262,278,],[-2,-9,12,12,-5,12,-7,-7,-21,-22,-19,-23,12,12,-20,-24,]),'FUNC':([6,7,8,9,10,11,14,17,25,41,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,226,227,228,232,238,239,242,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,290,291,298,301,302,306,307,312,314,315,318,319,320,321,324,325,326,327,329,330,331,332,],[-2,-9,-133,16,-133,-11,16,-10,16,-5,72,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,72,72,-125,72,-59,-59,-59,-130,72,-21,-22,-126,-100,72,-102,-103,72,-105,-108,-58,-58,-58,-58,-113,-114,-58,-58,-117,-118,-58,-58,-121,-123,-124,-127,-128,-129,72,-50,-51,-54,-55,-56,-57,72,-133,-133,72,72,72,72,72,72,72,72,-122,-52,-53,-58,72,-87,72,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,72,72,72,-58,72,72,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,72,-62,72,72,-131,-115,-116,-119,-120,-98,-60,-60,-61,-73,-133,72,72,-63,-65,-64,72,-79,-133,72,-20,-68,72,72,-79,72,-30,-24,-69,72,72,-4,-132,-81,72,-42,-133,-80,-88,-85,-84,72,-82,-90,-85,72,-91,-4,-96,-41,-97,-83,-89,]),'VOID':([6,7,8,9,10,11,13,14,15,16,17,25,26,27,36,52,54,76,78,164,191,262,278,290,302,326,329,],[-2,-9,-133,-133,-133,-11,24,-133,-13,29,-10,-133,-12,-15,-14,-7,-7,-21,-22,-19,-23,-20,-24,-4,-42,-4,-41,]),'FOR':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,131,132,141,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,218,219,220,221,223,226,227,228,238,247,248,249,254,259,260,262,263,272,273,275,277,278,279,287,291,298,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,122,-21,-22,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,122,-50,-51,-54,-55,-56,-57,-133,-133,-122,-52,-53,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,-62,-131,-115,-116,-119,-120,-98,-60,-60,-61,-133,-63,-65,-64,-79,-133,122,-20,-68,122,-79,122,-30,-24,-69,122,-132,-81,-133,-80,-88,-85,-84,122,-82,-90,-85,122,-91,-96,-97,-83,-89,]),'PRINT':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,131,132,141,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,218,219,220,221,223,226,227,228,238,247,248,249,254,259,260,262,263,272,273,275,277,278,279,287,291,298,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,123,-21,-22,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,123,-50,-51,-54,-55,-56,-57,-133,-133,-122,-52,-53,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,-62,-131,-115,-116,-119,-120,-98,-60,-60,-61,-133,-63,-65,-64,-79,-133,123,-20,-68,123,-79,123,-30,-24,-69,123,-132,-81,-133,-80,-88,-85,-84,123,-82,-90,-85,123,-91,-96,-97,-83,-89,]),'IF':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,131,132,141,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,218,219,220,221,223,226,227,228,238,247,248,249,254,259,260,262,263,272,273,275,277,278,279,287,291,298,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,124,-21,-22,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,124,-50,-51,-54,-55,-56,-57,-133,-133,-122,-52,-53,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,-62,-131,-115,-116,-119,-120,-98,-60,-60,-61,-133,-63,-65,-64,-79,-133,124,-20,-68,124,-79,124,-30,-24,-69,124,-132,-81,-133,-80,-88,-85,-84,124,-82,-90,-85,124,-91,-96,-97,-83,-89,]),'WHILE':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,131,132,141,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,218,219,220,221,223,226,227,228,238,247,248,249,254,259,260,262,263,272,273,275,277,278,279,287,291,298,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,125,-21,-22,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,125,-50,-51,-54,-55,-56,-57,-133,-133,-122,-52,-53,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,-62,-131,-115,-116,-119,-120,-98,-60,-60,-61,-133,-63,-65,-64,-79,-133,125,-20,-68,125,-79,125,-30,-24,-69,125,-132,-81,-133,-80,-88,-85,-84,125,-82,-90,-85,125,-91,-96,-97,-83,-89,]),'TRUE':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,226,227,228,232,238,239,242,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,291,298,301,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,59,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,59,-125,-59,-59,-59,-130,59,-21,-22,-126,-100,59,-102,-103,59,-105,-108,-58,-58,-58,-58,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,59,-50,-51,-54,-55,-56,-57,59,-133,-133,59,59,59,59,-122,-52,-53,-58,59,-87,59,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,59,59,59,-58,59,59,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,59,-62,59,59,-131,-115,-116,-119,-120,-98,-60,-60,-61,-73,-133,59,59,-63,-65,-64,59,-79,-133,59,-20,-68,59,59,-79,59,-30,-24,-69,59,59,-132,-81,59,-133,-80,-88,-85,-84,59,-82,-90,-85,59,-91,-96,-97,-83,-89,]),'FALSE':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,226,227,228,232,238,239,242,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,291,298,301,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,60,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,60,-125,-59,-59,-59,-130,60,-21,-22,-126,-100,60,-102,-103,60,-105,-108,-58,-58,-58,-58,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,60,-50,-51,-54,-55,-56,-57,60,-133,-133,60,60,60,60,-122,-52,-53,-58,60,-87,60,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,60,60,60,-58,60,60,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,60,-62,60,60,-131,-115,-116,-119,-120,-98,-60,-60,-61,-73,-133,60,60,-63,-65,-64,60,-79,-133,60,-20,-68,60,60,-79,60,-30,-24,-69,60,60,-132,-81,60,-133,-80,-88,-85,-84,60,-82,-90,-85,60,-91,-96,-97,-83,-89,]),'(':([10,11,17,41,42,43,48,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,74,75,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,111,113,114,117,118,119,120,123,124,125,129,131,132,133,134,135,136,137,138,139,140,141,142,149,150,151,154,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,226,227,228,232,238,239,242,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,291,298,301,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,-6,-6,64,-133,-9,-9,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,64,-125,-59,-59,-59,-130,64,126,127,-21,-22,-126,-100,64,-102,-103,64,-105,-108,-58,-58,-58,-58,-113,-114,-58,-58,-117,-118,-58,-58,-121,-123,-124,-127,-128,-129,-66,64,-50,-51,-54,-55,-56,-57,-58,155,156,64,-133,-133,64,64,64,64,64,64,64,64,-122,175,-52,-53,-58,183,64,-87,64,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,64,201,64,203,64,-58,64,64,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,64,-62,64,64,-131,-115,-116,-119,-120,-98,-60,-60,-61,-73,-133,64,64,-63,-65,-64,64,-79,-133,64,-20,-68,64,64,-79,64,-30,-24,-69,64,64,-132,-81,64,-133,-80,-88,-85,-84,64,-82,-90,-85,64,-91,-96,-97,-83,-89,]),'*':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,109,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,224,226,227,228,232,238,239,242,244,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,291,293,298,301,303,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,65,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,99,65,-125,-59,-59,-59,-130,65,-21,-22,-126,-100,65,-102,-103,65,-105,-108,-58,-58,-58,-58,-113,-114,-58,-58,-117,-118,-58,-58,-121,-123,-124,-127,-128,-129,-59,65,-50,-51,-54,-55,-56,-57,65,-133,-133,65,65,65,65,65,65,65,65,-122,-52,-53,-58,65,-87,65,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,65,65,65,-58,65,65,-28,-23,-109,-110,-111,-112,-99,-99,99,99,65,-62,65,65,-131,-115,-116,-119,-120,-98,-28,-60,-60,-61,-73,-133,65,65,-131,-63,-65,-64,65,-79,-133,65,-20,-68,65,65,-79,65,-30,-24,-69,65,65,-132,-30,-81,65,-132,-133,-80,-88,-85,-84,65,-82,-90,-85,65,-91,-96,-97,-83,-89,]),'/':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,109,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,224,226,227,228,232,238,239,242,244,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,291,293,298,301,303,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,67,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,100,67,-125,-59,-59,-59,-130,67,-21,-22,-126,-100,67,-102,-103,67,-105,-108,-58,-58,-58,-58,-113,-114,-58,-58,-117,-118,-58,-58,-121,-123,-124,-127,-128,-129,-59,67,-50,-51,-54,-55,-56,-57,67,-133,-133,67,67,67,67,67,67,67,67,-122,-52,-53,-58,67,-87,67,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,67,67,67,-58,67,67,-28,-23,-109,-110,-111,-112,-99,-99,100,100,67,-62,67,67,-131,-115,-116,-119,-120,-98,-28,-60,-60,-61,-73,-133,67,67,-131,-63,-65,-64,67,-79,-133,67,-20,-68,67,67,-79,67,-30,-24,-69,67,67,-132,-30,-81,67,-132,-133,-80,-88,-85,-84,67,-82,-90,-85,67,-91,-96,-97,-83,-89,]),'I_CONST':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,226,227,228,232,238,239,242,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,291,298,301,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,68,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,68,68,-125,68,-59,-59,-59,-130,68,-21,-22,-126,-100,68,-102,-103,68,-105,-108,-58,-58,-58,-58,-113,-114,-58,-58,-117,-118,-58,-58,-121,-123,-124,-127,-128,-129,68,-50,-51,-54,-55,-56,-57,68,-133,-133,68,68,68,68,68,68,68,68,-122,-52,-53,-58,68,-87,68,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,68,68,68,-58,68,68,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,68,-62,68,68,-131,-115,-116,-119,-120,-98,-60,-60,-61,-73,-133,68,68,-63,-65,-64,68,-79,-133,68,-20,-68,68,68,-79,68,-30,-24,-69,68,68,-132,-81,68,-133,-80,-88,-85,-84,68,-82,-90,-85,68,-91,-96,-97,-83,-89,]),'F_CONST':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,226,227,228,232,238,239,242,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,291,298,301,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,69,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,69,69,-125,69,-59,-59,-59,-130,69,-21,-22,-126,-100,69,-102,-103,69,-105,-108,-58,-58,-58,-58,-113,-114,-58,-58,-117,-118,-58,-58,-121,-123,-124,-127,-128,-129,69,-50,-51,-54,-55,-56,-57,69,-133,-133,69,69,69,69,69,69,69,69,-122,-52,-53,-58,69,-87,69,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,69,69,69,-58,69,69,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,69,-62,69,69,-131,-115,-116,-119,-120,-98,-60,-60,-61,-73,-133,69,69,-63,-65,-64,69,-79,-133,69,-20,-68,69,69,-79,69,-30,-24,-69,69,69,-132,-81,69,-133,-80,-88,-85,-84,69,-82,-90,-85,69,-91,-96,-97,-83,-89,]),'C_CONST':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,218,219,220,221,223,226,227,228,232,238,239,242,247,248,249,253,254,259,260,262,263,265,272,273,275,277,278,279,283,287,291,298,301,306,307,312,314,315,318,319,320,321,324,325,327,330,331,332,],[-133,-11,-10,-5,70,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,70,70,-125,70,-59,-59,-59,-130,70,-21,-22,-126,-100,70,-102,-103,70,-105,-108,-58,-58,-58,-58,-113,-114,-58,-58,-117,-118,-58,-58,-121,-123,-124,-127,-128,-129,70,-50,-51,-54,-55,-56,-57,70,-133,-133,70,70,70,70,70,70,70,70,-122,-52,-53,-58,70,-87,70,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,70,70,70,-58,70,70,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,70,-62,70,70,-131,-115,-116,-119,-120,-98,-60,-60,-61,-73,-133,70,70,-63,-65,-64,70,-79,-133,70,-20,-68,70,70,-79,70,-30,-24,-69,70,70,-132,-81,70,-133,-80,-88,-85,-84,70,-82,-90,-85,70,-91,-96,-97,-83,-89,]),'}':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,110,111,112,113,114,117,118,119,120,131,132,141,147,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,218,219,220,221,223,226,227,228,238,247,248,249,254,260,262,263,272,273,276,277,278,279,286,287,291,298,299,306,307,312,314,315,317,318,319,320,321,322,323,324,325,327,328,330,331,332,],[-133,-11,-10,-5,-133,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-133,-21,-22,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,146,-133,-49,-50,-51,-54,-55,-56,-57,-133,-133,-122,-48,-52,-53,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,-62,-131,-115,-116,-119,-120,-98,-60,-60,-61,-133,-63,-65,-64,-79,-133,-20,-68,-133,-79,290,-30,-24,-69,298,-133,-132,-81,307,-133,-80,-88,-85,-84,-40,-133,-82,-90,-85,326,327,-133,-91,-96,331,-97,-83,-89,]),'RETURN':([10,11,17,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,112,113,114,117,118,119,120,131,132,141,147,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,218,219,220,221,223,226,227,228,247,248,249,259,262,263,275,277,278,279,289,291,298,306,307,312,314,315,320,321,325,327,330,331,332,],[-133,-11,-10,-7,-7,-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-21,-22,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,-133,-49,-50,-51,-54,-55,-56,-57,-133,-133,-122,-48,-52,-53,-19,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-23,-109,-110,-111,-112,-99,-99,-133,-133,-62,-131,-115,-116,-119,-120,-98,-60,-60,-61,-63,-65,-64,-133,-20,-68,-133,-30,-24,-69,301,-132,-81,-133,-80,-88,-85,-84,-90,-85,-91,-96,-97,-83,-89,]),'DATAFRAME':([12,],[20,]),'INT':([12,16,126,127,257,],[21,21,21,21,21,]),'FLOAT':([12,16,126,127,257,],[22,22,22,22,22,]),'CHAR':([12,16,126,127,257,],[23,23,23,23,23,]),'MAIN':([24,],[35,]),',':([30,31,39,40,53,55,57,58,59,60,61,62,63,66,68,69,70,71,77,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,128,131,132,141,165,166,167,168,169,170,171,172,173,174,186,189,192,193,194,195,196,197,198,199,200,208,209,212,215,218,219,220,221,222,230,236,263,264,270,271,277,279,280,284,285,288,291,300,308,],[-6,-6,45,45,-6,-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-17,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,45,-133,-133,-122,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-6,-28,-109,-110,-111,-112,-99,-99,-133,-133,-67,-72,232,-8,-131,-115,-116,-119,-120,242,232,257,-68,-67,-72,-72,-30,-69,242,232,232,-6,-132,-8,257,]),'[':([31,40,55,80,81,109,130,145,153,182,189,216,224,245,250,268,],[-6,48,-6,129,-18,-6,163,177,-6,207,-29,239,-29,265,-29,283,]),'{':([35,213,214,234,237,255,310,313,],[41,-39,238,254,259,273,318,319,]),'+':([55,62,63,66,68,69,70,71,79,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,198,199,205,215,220,221,224,244,263,277,279,291,293,303,],[-59,95,-133,-125,-59,-59,-59,-130,-126,-118,-121,-123,-124,-127,-128,-129,-59,-130,-122,95,95,-99,-99,-28,-133,-133,-130,-131,-119,-120,-28,-131,-68,-30,-69,-132,-30,-132,]),'-':([55,62,63,66,68,69,70,71,79,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,198,199,205,215,220,221,224,244,263,277,279,291,293,303,],[-59,96,-133,-125,-59,-59,-59,-130,-126,-118,-121,-123,-124,-127,-128,-129,-59,-130,-122,96,96,-99,-99,-28,-133,-133,-130,-131,-119,-120,-28,-131,-68,-30,-69,-132,-30,-132,]),'>':([55,61,62,63,66,68,69,70,71,79,94,97,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,196,197,198,199,205,215,218,219,220,221,224,244,263,277,279,291,293,303,],[-59,89,-133,-133,-125,-59,-59,-59,-130,-126,-114,-117,-118,-121,-123,-124,-127,-128,-129,-59,-130,-122,-133,-133,-99,-99,-28,-99,-99,-133,-133,-130,-131,-115,-116,-119,-120,-28,-131,-68,-30,-69,-132,-30,-132,]),'<':([55,61,62,63,66,68,69,70,71,79,94,97,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,196,197,198,199,205,215,218,219,220,221,224,244,263,277,279,291,293,303,],[-59,90,-133,-133,-125,-59,-59,-59,-130,-126,-114,-117,-118,-121,-123,-124,-127,-128,-129,-59,-130,-122,-133,-133,-99,-99,-28,-99,-99,-133,-133,-130,-131,-115,-116,-119,-120,-28,-131,-68,-30,-69,-132,-30,-132,]),'DIFFERENT':([55,61,62,63,66,68,69,70,71,79,94,97,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,196,197,198,199,205,215,218,219,220,221,224,244,263,277,279,291,293,303,],[-59,91,-133,-133,-125,-59,-59,-59,-130,-126,-114,-117,-118,-121,-123,-124,-127,-128,-129,-59,-130,-122,-133,-133,-99,-99,-28,-99,-99,-133,-133,-130,-131,-115,-116,-119,-120,-28,-131,-68,-30,-69,-132,-30,-132,]),'EQUAL':([55,61,62,63,66,68,69,70,71,79,94,97,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,196,197,198,199,205,215,218,219,220,221,224,244,263,277,279,291,293,303,],[-59,92,-133,-133,-125,-59,-59,-59,-130,-126,-114,-117,-118,-121,-123,-124,-127,-128,-129,-59,-130,-122,-133,-133,-99,-99,-28,-99,-99,-133,-133,-130,-131,-115,-116,-119,-120,-28,-131,-68,-30,-69,-132,-30,-132,]),'AND':([55,58,59,60,61,62,63,66,68,69,70,71,79,88,93,94,97,98,101,103,104,105,106,107,109,114,132,141,167,168,169,170,171,172,173,174,189,192,193,194,195,196,197,198,199,205,215,218,219,220,221,224,244,263,277,279,291,293,303,],[-59,86,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-126,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,-59,-130,86,-122,-99,-99,-99,-99,-133,-133,-99,-99,-28,-109,-110,-111,-112,-99,-99,-133,-133,-130,-131,-115,-116,-119,-120,-28,-131,-68,-30,-69,-132,-30,-132,]),'OR':([55,57,58,59,60,61,62,63,66,68,69,70,71,79,85,87,88,93,94,97,98,101,103,104,105,106,107,109,114,131,132,141,166,167,168,169,170,171,172,173,174,189,192,193,194,195,196,197,198,199,205,215,218,219,220,221,224,244,263,277,279,291,293,303,],[-59,83,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-126,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,-59,-130,83,-133,-122,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-109,-110,-111,-112,-99,-99,-133,-133,-130,-131,-115,-116,-119,-120,-28,-131,-68,-30,-69,-132,-30,-132,]),']':([55,56,57,58,59,60,61,62,63,66,68,69,70,71,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,131,132,141,162,165,166,167,168,169,170,171,172,173,174,189,190,192,193,194,195,196,197,198,199,202,215,218,219,220,221,224,229,261,263,277,279,281,291,293,295,],[-59,81,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,-133,-133,-122,189,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,217,-109,-110,-111,-112,-99,-99,-133,-133,224,-131,-115,-116,-119,-120,-28,250,277,-68,-30,-69,293,-132,-30,305,]),')':([55,57,58,59,60,61,62,63,66,68,69,70,71,79,82,84,85,87,88,93,94,97,98,101,102,103,104,105,106,107,126,127,131,132,141,158,159,160,165,166,167,168,169,170,171,172,173,174,184,186,187,188,189,192,193,194,195,196,197,198,199,200,201,208,209,210,211,212,215,218,219,220,221,222,225,230,231,233,235,236,241,243,246,251,256,258,263,264,266,270,271,277,279,280,282,284,285,288,291,292,296,297,300,308,316,],[-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,141,-123,-124,-127,-128,-129,-133,-133,-133,-133,-122,-43,-45,-43,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-86,-6,213,214,-28,-109,-110,-111,-112,-99,-99,-133,-133,-67,223,-72,-133,234,-86,-8,-131,-115,-116,-119,-120,-133,-92,-133,252,-78,255,-133,263,-71,-93,269,-44,-47,-68,-67,-95,-72,-72,-30,-69,-133,294,-133,-133,-6,-132,-70,-76,-77,-8,-133,-46,]),'TO':([55,57,58,59,60,61,62,63,66,68,69,70,71,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,113,131,132,141,148,165,166,167,168,169,170,171,172,173,174,189,192,193,194,195,196,197,198,199,205,215,218,219,220,221,226,227,228,247,248,249,263,277,279,291,],[-59,-133,-133,-106,-107,-133,-133,-133,-125,-59,-59,-59,-130,-126,-100,-102,-103,-105,-108,-113,-114,-117,-118,-121,-123,-124,-127,-128,-129,-92,-133,-133,-122,179,-101,-104,-99,-99,-99,-99,-133,-133,-99,-99,-28,-109,-110,-111,-112,-99,-99,-133,-133,-62,-131,-115,-116,-119,-120,-60,-60,-61,-63,-65,-64,-68,-30,-69,-132,]),'.':([109,],[143,]),'=':([109,121,144,152,153,224,244,250,267,293,303,305,311,],[-27,151,-31,181,-27,-28,-32,-28,-32,-30,-33,-30,-33,]),'DESCRIBE':([143,],[176,]),'TITLE':([183,232,253,],[209,-73,271,]),'DO':([294,304,],[-94,310,]),'ELSE':([298,306,],[-81,313,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'add_type':([2,21,22,23,29,],[3,32,33,34,38,]),'add_id':([4,30,31,42,43,53,55,109,153,186,288,],[5,39,40,50,51,77,80,145,182,212,300,]),'go_to_main':([6,],[7,]),'save_function':([7,50,51,],[8,74,75,]),'VARS_PRIME':([8,10,49,238,259,],[9,17,73,260,275,]),'VARS':([8,10,49,238,259,],[10,10,10,10,10,]),'empty':([8,9,10,14,25,39,40,49,57,58,61,62,63,73,111,126,127,128,131,132,171,172,198,199,209,222,230,236,238,259,260,272,275,280,284,285,287,306,308,318,324,],[11,15,11,27,27,46,46,11,84,87,93,97,101,112,112,159,159,46,84,87,97,97,101,101,233,243,233,258,11,11,112,112,112,243,233,233,112,314,258,112,112,]),'FUNCTION_PRIME':([9,],[13,]),'FUNCTION':([9,14,25,],[14,25,25,]),'TIPO_COMP':([12,],[18,]),'TIPO_SIMPLE':([12,16,126,127,257,],[19,28,157,157,274,]),'FUNC_PRIME':([14,25,],[26,36,]),'add_function_type':([28,],[37,]),'TIPO_PRIME':([39,40,128,],[44,47,161,]),'fill_go_to_main_quad':([41,],[49,]),'EXPRESSION':([48,64,73,111,129,155,163,175,177,180,183,185,203,206,207,239,242,253,260,265,272,275,283,287,301,318,324,],[56,102,115,115,162,184,190,200,202,204,208,211,225,228,229,261,264,270,115,281,115,115,295,115,309,115,115,]),'AND_EXP':([48,64,73,83,111,129,155,163,175,177,180,183,185,203,206,207,239,242,253,260,265,272,275,283,287,301,318,324,],[57,57,57,131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'B_EXP':([48,64,73,83,86,111,129,133,134,135,136,155,163,175,177,180,183,185,203,206,207,239,242,253,260,265,272,275,283,287,301,318,324,],[58,58,58,58,132,58,58,167,168,169,170,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'EXP':([48,64,73,83,86,111,129,133,134,135,136,155,163,175,177,180,183,185,203,206,207,239,242,253,260,265,272,275,283,287,301,318,324,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'TERM':([48,64,73,83,86,111,129,133,134,135,136,137,138,155,163,175,177,180,183,185,203,206,207,239,242,253,260,265,272,275,283,287,301,318,324,],[62,62,62,62,62,62,62,62,62,62,62,171,172,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FACTOR':([48,64,73,83,86,111,129,133,134,135,136,137,138,139,140,155,163,175,177,180,183,185,203,206,207,239,242,253,260,265,272,275,283,287,301,318,324,],[63,63,63,63,63,63,63,63,63,63,63,63,63,173,174,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'VAR_CT':([48,64,65,67,73,83,86,111,129,133,134,135,136,137,138,139,140,155,163,175,177,180,183,185,203,206,207,239,242,253,260,265,272,275,283,287,301,318,324,],[66,66,103,104,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FUNC_CALL':([48,64,65,67,73,83,86,111,129,133,134,135,136,137,138,139,140,155,163,175,177,180,183,185,203,206,207,239,242,253,260,265,272,275,283,287,301,318,324,],[71,71,71,71,114,71,71,114,71,71,71,71,71,71,71,71,71,71,71,71,71,205,71,71,71,71,71,71,71,71,114,71,114,114,71,114,71,114,114,]),'save_ids':([52,54,],[76,78,]),'add_operand':([55,68,69,70,109,],[79,105,106,107,79,]),'EXPRESSION_PRIME':([57,131,],[82,165,]),'AND_EXP_PRIME':([58,132,],[85,166,]),'B_EXP_PRIME':([61,],[88,]),'EXP_PRIME':([62,171,172,],[94,196,197,]),'TERM_PRIME':([63,198,199,],[98,220,221,]),'BLOCK':([73,111,260,272,275,287,318,324,],[110,147,276,286,289,299,323,328,]),'STATEMENT':([73,111,260,272,275,287,318,324,],[111,111,111,111,111,111,111,111,]),'ASSIGNATION':([73,111,260,272,275,287,318,324,],[113,113,113,113,113,113,113,113,]),'WRITE':([73,111,260,272,275,287,318,324,],[116,116,116,116,116,116,116,116,]),'CONDITION':([73,111,260,272,275,287,318,324,],[117,117,117,117,117,117,117,117,]),'WHILE_STMT':([73,111,260,272,275,287,318,324,],[118,118,118,118,118,118,118,118,]),'FOR_STMT':([73,111,260,272,275,287,318,324,],[119,119,119,119,119,119,119,119,]),'DESCRIBE_STMT':([73,111,260,272,275,287,318,324,],[120,120,120,120,120,120,120,120,]),'VARIABLE':([73,111,122,260,272,275,287,318,324,],[121,121,152,121,121,121,121,121,121,]),'add_current_type':([77,],[128,]),'check_for_array_length':([81,217,],[130,240,]),'add_operator':([89,90,91,92,95,96,99,100,123,151,181,],[133,134,135,136,137,138,139,140,154,180,206,]),'era_quad':([108,],[142,]),'get_variable':([109,153,],[144,144,]),'check_exact_type_for':([113,225,],[148,246,]),'PARAM':([126,127,],[158,160,]),'empty_global_variables_table':([146,],[178,]),'append_jump':([156,],[185,]),'add_parameters':([158,160,],[187,188,]),'save_array':([164,],[191,]),'aritmetics_operation':([167,168,169,170,173,174,196,197,],[192,193,194,195,198,199,218,219,]),'pop_type':([184,211,],[210,235,]),'ver_quad_dimension_one_array':([189,224,250,],[215,244,267,]),'ver_quad_dimension_one_matrix':([189,224,250,],[216,245,268,]),'param_quad':([200,264,],[222,280,]),'functions_assignation':([205,],[227,]),'print_quad':([208,270,271,],[230,284,285,]),'WRITE_PRIME':([209,230,284,285,],[231,251,296,297,]),'save_parameter':([212,300,],[236,308,]),'save_function_as_variable':([213,],[237,]),'FUNC_CALL_PRIME':([222,280,],[241,292,]),'add_assignation_quad':([226,227,],[247,248,]),'add_assignation_for_quad':([228,],[249,]),'add_print_operator':([232,],[253,]),'PARAM_PRIME':([236,308,],[256,316,]),'add_final_counter_for':([246,],[266,]),'go_to_false_quad':([254,273,],[272,287,]),'save_matrix':([262,],[278,]),'go_sub_quad':([263,],[279,]),'check_boolean_expression_for':([266,],[282,]),'ver_quad_dimension_two_matrix':([277,293,305,],[291,303,311,]),'empty_local_variables_table':([290,326,],[302,329,]),'generate_for_quad':([294,],[304,]),'fill_go_to_false_quad_if':([298,],[306,]),'ELSE_STMT':([306,],[312,]),'fill_go_to_false_quad':([307,],[315,]),'pop_operand':([314,321,],[320,325,]),'go_to_quad':([315,],[321,]),'return_quad':([317,],[322,]),'go_to_true_quad':([319,],[324,]),'end_for':([327,],[330,]),'fill_go_to_true_quad':([331,],[332,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> PROG add_type ID add_id ; go_to_main save_function VARS_PRIME FUNCTION_PRIME VOID MAIN { fill_go_to_main_quad VARS_PRIME BLOCK } empty_global_variables_table','PROGRAM',17,'p_PROGRAM','parser.py',9),
  ('go_to_main -> <empty>','go_to_main',0,'p_go_to_main','parser.py',14),
  ('empty_global_variables_table -> <empty>','empty_global_variables_table',0,'p_empty_global_variables_table','parser.py',18),
  ('empty_local_variables_table -> <empty>','empty_local_variables_table',0,'p_empty_local_variables_table','parser.py',22),
  ('fill_go_to_main_quad -> <empty>','fill_go_to_main_quad',0,'p_fill_go_to_main_quad','parser.py',26),
  ('add_id -> <empty>','add_id',0,'p_add_id','parser.py',30),
  ('save_ids -> <empty>','save_ids',0,'p_save_ids','parser.py',34),
  ('save_parameter -> <empty>','save_parameter',0,'p_save_parameter','parser.py',38),
  ('save_function -> <empty>','save_function',0,'p_save_function','parser.py',42),
  ('VARS_PRIME -> VARS VARS_PRIME','VARS_PRIME',2,'p_VARS_PRIME','parser.py',47),
  ('VARS_PRIME -> empty','VARS_PRIME',1,'p_VARS_PRIME','parser.py',48),
  ('FUNCTION_PRIME -> FUNCTION FUNC_PRIME','FUNCTION_PRIME',2,'p_FUNCTION_PRIME','parser.py',54),
  ('FUNCTION_PRIME -> empty','FUNCTION_PRIME',1,'p_FUNCTION_PRIME','parser.py',55),
  ('FUNC_PRIME -> FUNCTION FUNC_PRIME','FUNC_PRIME',2,'p_FUNC','parser.py',61),
  ('FUNC_PRIME -> empty','FUNC_PRIME',1,'p_FUNC','parser.py',62),
  ('add_type -> <empty>','add_type',0,'p_add_type','parser.py',67),
  ('add_current_type -> <empty>','add_current_type',0,'p_add_current_type','parser.py',71),
  ('check_for_array_length -> <empty>','check_for_array_length',0,'p_check_for_array_length','parser.py',75),
  ('save_array -> <empty>','save_array',0,'p_save_array','parser.py',79),
  ('save_matrix -> <empty>','save_matrix',0,'p_save_matrix','parser.py',83),
  ('VARS -> VAR TIPO_COMP ID add_id TIPO_PRIME ; save_ids','VARS',7,'p_VARS','parser.py',88),
  ('VARS -> VAR TIPO_SIMPLE ID add_id TIPO_PRIME ; save_ids','VARS',7,'p_VARS','parser.py',89),
  ('VARS -> VAR TIPO_SIMPLE ID add_id [ EXPRESSION ] check_for_array_length ; save_array','VARS',10,'p_VARS','parser.py',90),
  ('VARS -> VAR TIPO_SIMPLE ID add_id [ EXPRESSION ] check_for_array_length [ EXPRESSION ] check_for_array_length ; save_matrix','VARS',14,'p_VARS','parser.py',91),
  ('TIPO_PRIME -> , ID add_id add_current_type TIPO_PRIME','TIPO_PRIME',5,'p_TIPO_PRIME','parser.py',97),
  ('TIPO_PRIME -> empty','TIPO_PRIME',1,'p_TIPO_PRIME','parser.py',98),
  ('get_variable -> <empty>','get_variable',0,'p_get_variable','parser.py',103),
  ('ver_quad_dimension_one_array -> <empty>','ver_quad_dimension_one_array',0,'p_ver_quad_dimension_one_array','parser.py',107),
  ('ver_quad_dimension_one_matrix -> <empty>','ver_quad_dimension_one_matrix',0,'p_ver_quad_dimension_one_matrix','parser.py',111),
  ('ver_quad_dimension_two_matrix -> <empty>','ver_quad_dimension_two_matrix',0,'p_ver_quad_dimension_two_matrix','parser.py',115),
  ('VARIABLE -> ID get_variable','VARIABLE',2,'p_VARIABLE','parser.py',120),
  ('VARIABLE -> ID add_id [ EXPRESSION ] ver_quad_dimension_one_array','VARIABLE',6,'p_VARIABLE','parser.py',121),
  ('VARIABLE -> ID add_id [ EXPRESSION ] ver_quad_dimension_one_matrix [ EXPRESSION ] ver_quad_dimension_two_matrix','VARIABLE',10,'p_VARIABLE','parser.py',122),
  ('TIPO_SIMPLE -> INT add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',128),
  ('TIPO_SIMPLE -> FLOAT add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',129),
  ('TIPO_SIMPLE -> CHAR add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',130),
  ('TIPO_COMP -> DATAFRAME','TIPO_COMP',1,'p_TIPO_COMP','parser.py',136),
  ('add_function_type -> <empty>','add_function_type',0,'p_add_function_type','parser.py',141),
  ('save_function_as_variable -> <empty>','save_function_as_variable',0,'p_save_function_as_variable','parser.py',145),
  ('return_quad -> <empty>','return_quad',0,'p_return_quad','parser.py',149),
  ('FUNCTION -> FUNC TIPO_SIMPLE add_function_type ID add_id save_function ( PARAM add_parameters ) save_function_as_variable { VARS_PRIME BLOCK RETURN EXPRESSION ; return_quad } empty_local_variables_table','FUNCTION',20,'p_FUNCTION','parser.py',154),
  ('FUNCTION -> FUNC VOID add_type ID add_id save_function ( PARAM add_parameters ) { VARS_PRIME BLOCK } empty_local_variables_table','FUNCTION',15,'p_FUNCTION','parser.py',155),
  ('add_parameters -> <empty>','add_parameters',0,'p_add_parameters','parser.py',160),
  ('PARAM -> TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME','PARAM',5,'p_PARAM','parser.py',165),
  ('PARAM -> empty','PARAM',1,'p_PARAM','parser.py',166),
  ('PARAM_PRIME -> , TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME','PARAM_PRIME',6,'p_PARAM_PRIME','parser.py',172),
  ('PARAM_PRIME -> empty','PARAM_PRIME',1,'p_PARAM_PRIME','parser.py',173),
  ('BLOCK -> STATEMENT BLOCK','BLOCK',2,'p_BLOCK','parser.py',179),
  ('BLOCK -> empty','BLOCK',1,'p_BLOCK','parser.py',180),
  ('STATEMENT -> ASSIGNATION','STATEMENT',1,'p_STATEMENT','parser.py',186),
  ('STATEMENT -> FUNC_CALL','STATEMENT',1,'p_STATEMENT','parser.py',187),
  ('STATEMENT -> EXPRESSION ;','STATEMENT',2,'p_STATEMENT','parser.py',188),
  ('STATEMENT -> WRITE ;','STATEMENT',2,'p_STATEMENT','parser.py',189),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',190),
  ('STATEMENT -> WHILE_STMT','STATEMENT',1,'p_STATEMENT','parser.py',191),
  ('STATEMENT -> FOR_STMT','STATEMENT',1,'p_STATEMENT','parser.py',192),
  ('STATEMENT -> DESCRIBE_STMT','STATEMENT',1,'p_STATEMENT','parser.py',193),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','parser.py',198),
  ('add_operand -> <empty>','add_operand',0,'p_add_operand','parser.py',202),
  ('add_assignation_quad -> <empty>','add_assignation_quad',0,'p_add_assignation_quad','parser.py',206),
  ('add_assignation_for_quad -> <empty>','add_assignation_for_quad',0,'p_add_assignation_for_quad','parser.py',210),
  ('functions_assignation -> <empty>','functions_assignation',0,'p_functions_assignation','parser.py',214),
  ('ASSIGNATION -> VARIABLE = add_operator EXPRESSION ; add_assignation_quad','ASSIGNATION',6,'p_ASSIGNATION','parser.py',219),
  ('ASSIGNATION -> FOR VARIABLE = add_operator EXPRESSION add_assignation_for_quad','ASSIGNATION',6,'p_ASSIGNATION','parser.py',220),
  ('ASSIGNATION -> VARIABLE = add_operator FUNC_CALL functions_assignation add_assignation_quad','ASSIGNATION',6,'p_ASSIGNATION','parser.py',221),
  ('era_quad -> <empty>','era_quad',0,'p_era_quad','parser.py',226),
  ('param_quad -> <empty>','param_quad',0,'p_param_quad','parser.py',230),
  ('go_sub_quad -> <empty>','go_sub_quad',0,'p_go_sub_quad','parser.py',234),
  ('FUNC_CALL -> FUNC ID era_quad ( EXPRESSION param_quad FUNC_CALL_PRIME ) go_sub_quad','FUNC_CALL',9,'p_FUNC_CALL','parser.py',239),
  ('FUNC_CALL_PRIME -> , EXPRESSION param_quad FUNC_CALL_PRIME','FUNC_CALL_PRIME',4,'p_FUNC_CALL_PRIME','parser.py',245),
  ('FUNC_CALL_PRIME -> empty','FUNC_CALL_PRIME',1,'p_FUNC_CALL_PRIME','parser.py',246),
  ('print_quad -> <empty>','print_quad',0,'p_print_quad','parser.py',251),
  ('add_print_operator -> <empty>','add_print_operator',0,'p_add_print_operator','parser.py',255),
  ('WRITE -> PRINT add_operator ( EXPRESSION print_quad WRITE_PRIME )','WRITE',7,'p_WRITE','parser.py',260),
  ('WRITE -> PRINT add_operator ( TITLE WRITE_PRIME )','WRITE',6,'p_WRITE','parser.py',261),
  ('WRITE_PRIME -> , add_print_operator EXPRESSION print_quad WRITE_PRIME','WRITE_PRIME',5,'p_WRITE_PRIME','parser.py',267),
  ('WRITE_PRIME -> , add_print_operator TITLE print_quad WRITE_PRIME','WRITE_PRIME',5,'p_WRITE_PRIME','parser.py',268),
  ('WRITE_PRIME -> empty','WRITE_PRIME',1,'p_WRITE_PRIME','parser.py',269),
  ('go_to_false_quad -> <empty>','go_to_false_quad',0,'p_go_to_false_quad','parser.py',274),
  ('fill_go_to_false_quad -> <empty>','fill_go_to_false_quad',0,'p_fill_go_to_false_quad','parser.py',278),
  ('fill_go_to_false_quad_if -> <empty>','fill_go_to_false_quad_if',0,'p_fill_go_to_false_quad_if','parser.py',282),
  ('go_to_true_quad -> <empty>','go_to_true_quad',0,'p_go_to_true_quad','parser.py',286),
  ('fill_go_to_true_quad -> <empty>','fill_go_to_true_quad',0,'p_fill_go_to_true_quad','parser.py',290),
  ('go_to_quad -> <empty>','go_to_quad',0,'p_go_to_quad','parser.py',294),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',298),
  ('pop_type -> <empty>','pop_type',0,'p_pop_type','parser.py',302),
  ('append_jump -> <empty>','append_jump',0,'p_append_jump','parser.py',306),
  ('CONDITION -> IF ( EXPRESSION pop_type ) { go_to_false_quad BLOCK } fill_go_to_false_quad_if ELSE_STMT','CONDITION',11,'p_CONDITION','parser.py',311),
  ('ELSE_STMT -> ELSE { go_to_true_quad BLOCK } fill_go_to_true_quad','ELSE_STMT',6,'p_ELSE_STMT','parser.py',317),
  ('ELSE_STMT -> empty pop_operand','ELSE_STMT',2,'p_ELSE_STMT','parser.py',318),
  ('WHILE_STMT -> WHILE ( append_jump EXPRESSION pop_type ) { go_to_false_quad BLOCK } fill_go_to_false_quad go_to_quad pop_operand','WHILE_STMT',13,'p_WHILE_STMT','parser.py',324),
  ('check_exact_type_for -> <empty>','check_exact_type_for',0,'p_check_exact_type_for','parser.py',329),
  ('add_final_counter_for -> <empty>','add_final_counter_for',0,'p_add_final_counter_for','parser.py',333),
  ('generate_for_quad -> <empty>','generate_for_quad',0,'p_generate_for_quad','parser.py',337),
  ('check_boolean_expression_for -> <empty>','check_boolean_expression_for',0,'p_check_boolean_expression_for','parser.py',341),
  ('end_for -> <empty>','end_for',0,'p_end_for','parser.py',345),
  ('FOR_STMT -> ASSIGNATION check_exact_type_for TO ( EXPRESSION check_exact_type_for add_final_counter_for check_boolean_expression_for ) generate_for_quad DO { BLOCK } end_for','FOR_STMT',15,'p_FOR_STMT','parser.py',350),
  ('DESCRIBE_STMT -> ID . DESCRIBE ( )','DESCRIBE_STMT',5,'p_DESCRIBE_STMT','parser.py',356),
  ('aritmetics_operation -> <empty>','aritmetics_operation',0,'p_aritmetics_operation','parser.py',361),
  ('EXPRESSION -> AND_EXP EXPRESSION_PRIME','EXPRESSION',2,'p_EXPRESSION','parser.py',366),
  ('EXPRESSION_PRIME -> OR AND_EXP EXPRESSION_PRIME','EXPRESSION_PRIME',3,'p_EXPRESSION_PRIME','parser.py',372),
  ('EXPRESSION_PRIME -> empty','EXPRESSION_PRIME',1,'p_EXPRESSION_PRIME','parser.py',373),
  ('AND_EXP -> B_EXP AND_EXP_PRIME','AND_EXP',2,'p_AND_EXP','parser.py',379),
  ('AND_EXP_PRIME -> AND B_EXP AND_EXP_PRIME','AND_EXP_PRIME',3,'p_AND_EXP_PRIME','parser.py',385),
  ('AND_EXP_PRIME -> empty','AND_EXP_PRIME',1,'p_AND_EXP_PRIME','parser.py',386),
  ('B_EXP -> TRUE','B_EXP',1,'p_B_EXP','parser.py',392),
  ('B_EXP -> FALSE','B_EXP',1,'p_B_EXP','parser.py',393),
  ('B_EXP -> EXP B_EXP_PRIME','B_EXP',2,'p_B_EXP','parser.py',394),
  ('B_EXP_PRIME -> > add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',400),
  ('B_EXP_PRIME -> < add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',401),
  ('B_EXP_PRIME -> DIFFERENT add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',402),
  ('B_EXP_PRIME -> EQUAL add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',403),
  ('B_EXP_PRIME -> empty','B_EXP_PRIME',1,'p_B_EXP_PRIME','parser.py',404),
  ('EXP -> TERM EXP_PRIME','EXP',2,'p_EXP','parser.py',410),
  ('EXP_PRIME -> + add_operator TERM EXP_PRIME aritmetics_operation','EXP_PRIME',5,'p_EXP_PRIME','parser.py',416),
  ('EXP_PRIME -> - add_operator TERM EXP_PRIME aritmetics_operation','EXP_PRIME',5,'p_EXP_PRIME','parser.py',417),
  ('EXP_PRIME -> empty','EXP_PRIME',1,'p_EXP_PRIME','parser.py',418),
  ('TERM -> FACTOR TERM_PRIME','TERM',2,'p_TERM','parser.py',424),
  ('TERM_PRIME -> * add_operator FACTOR aritmetics_operation TERM_PRIME','TERM_PRIME',5,'p_TERM_PRIME','parser.py',430),
  ('TERM_PRIME -> / add_operator FACTOR aritmetics_operation TERM_PRIME','TERM_PRIME',5,'p_TERM_PRIME','parser.py',431),
  ('TERM_PRIME -> empty','TERM_PRIME',1,'p_TERM_PRIME','parser.py',432),
  ('FACTOR -> ( EXPRESSION )','FACTOR',3,'p_FACTOR','parser.py',438),
  ('FACTOR -> * VAR_CT','FACTOR',2,'p_FACTOR','parser.py',439),
  ('FACTOR -> / VAR_CT','FACTOR',2,'p_FACTOR','parser.py',440),
  ('FACTOR -> VAR_CT','FACTOR',1,'p_FACTOR','parser.py',441),
  ('VAR_CT -> ID add_operand','VAR_CT',2,'p_VAR_CT','parser.py',447),
  ('VAR_CT -> I_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',448),
  ('VAR_CT -> F_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',449),
  ('VAR_CT -> C_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',450),
  ('VAR_CT -> FUNC_CALL','VAR_CT',1,'p_VAR_CT','parser.py',451),
  ('VAR_CT -> ID add_id [ EXPRESSION ] ver_quad_dimension_one_array','VAR_CT',6,'p_VAR_CT','parser.py',452),
  ('VAR_CT -> ID add_id [ EXPRESSION ] ver_quad_dimension_one_matrix [ EXPRESSION ] ver_quad_dimension_two_matrix','VAR_CT',10,'p_VAR_CT','parser.py',453),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',462),
]
