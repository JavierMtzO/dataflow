
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = "AND CHAR C_CONST DATAFRAME DESCRIBE DIFFERENT DO ELSE EQUAL FALSE FLOAT FOR FUNC F_CONST ID IF INT I_CONST MAIN OR PRINT PROG RETURN TITLE TO TRUE VAR VOID WHILE\n    PROGRAM : PROG add_type ID add_id ';' go_to_main save_function VARS_PRIME FUNCTION_PRIME VOID MAIN '{' fill_go_to_main_quad VARS_PRIME BLOCK '}' empty_global_variables_table\n    go_to_main : empty_global_variables_table : empty_local_variables_table : fill_go_to_main_quad : add_id : save_ids : save_parameter : save_function : \n    VARS_PRIME : VARS VARS_PRIME\n               | empty\n    \n    FUNCTION_PRIME : FUNCTION FUNC_PRIME\n                   | empty\n    \n    FUNC_PRIME : FUNCTION FUNC_PRIME\n         | empty\n    add_type : add_current_type : check_for_array_length : save_array : \n    VARS : VAR TIPO_COMP ID add_id TIPO_PRIME ';' save_ids\n         | VAR TIPO_SIMPLE ID add_id TIPO_PRIME ';' save_ids\n         | VAR TIPO_SIMPLE ID add_id '[' EXPRESSION ']' check_for_array_length ';' save_array\n         | VAR TIPO_SIMPLE ID add_id '[' EXPRESSION ']' check_for_array_length '[' EXPRESSION ']' check_for_array_length ';'\n    \n    TIPO_PRIME : ',' ID add_id add_current_type TIPO_PRIME\n               | empty\n    get_variable : ver_quad_dimension_one : \n    VARIABLE : ID get_variable\n             | ID add_id '[' EXPRESSION ']' ver_quad_dimension_one\n    \n    TIPO_SIMPLE : INT add_type\n                | FLOAT add_type\n                | CHAR add_type\n    \n    TIPO_COMP : DATAFRAME\n    add_function_type : save_function_as_variable : return_quad : \n    FUNCTION : FUNC TIPO_SIMPLE add_function_type ID add_id save_function '(' PARAM add_parameters ')' save_function_as_variable '{' VARS_PRIME BLOCK RETURN EXPRESSION ';' return_quad '}' empty_local_variables_table\n             | FUNC VOID add_type ID add_id save_function '(' PARAM add_parameters ')' '{' VARS_PRIME BLOCK '}' empty_local_variables_table\n    add_parameters : \n    PARAM : TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME\n          | empty\n    \n    PARAM_PRIME : ',' TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME\n                | empty\n    \n    BLOCK : STATEMENT BLOCK\n          | empty\n    \n    STATEMENT : ASSIGNATION\n              | FUNC_CALL\n              | EXPRESSION ';'\n              | WRITE ';'\n              | CONDITION\n              | WHILE_STMT\n              | FOR_STMT\n              | DESCRIBE_STMT\n    add_operator : add_operand : add_assignation_quad : add_assignation_for_quad : functions_assignation : \n    ASSIGNATION : VARIABLE '=' add_operator EXPRESSION ';' add_assignation_quad\n                | FOR VARIABLE '=' add_operator EXPRESSION add_assignation_for_quad\n                | VARIABLE '=' add_operator FUNC_CALL functions_assignation add_assignation_quad\n    era_quad : param_quad : go_sub_quad : \n    FUNC_CALL : FUNC ID era_quad '(' EXPRESSION param_quad FUNC_CALL_PRIME ')' go_sub_quad\n    \n    FUNC_CALL_PRIME : ',' EXPRESSION param_quad FUNC_CALL_PRIME\n                    | empty\n    print_quad : add_print_operator : \n    WRITE : PRINT add_operator '(' EXPRESSION print_quad WRITE_PRIME ')'\n               | PRINT add_operator '(' TITLE WRITE_PRIME ')'\n    \n    WRITE_PRIME : ',' add_print_operator EXPRESSION print_quad WRITE_PRIME\n                | ',' add_print_operator TITLE print_quad WRITE_PRIME\n                | empty\n    go_to_false_quad : fill_go_to_false_quad : fill_go_to_false_quad_if : go_to_true_quad : fill_go_to_true_quad : go_to_quad : pop_operand : pop_type : append_jump : \n    CONDITION : IF '(' EXPRESSION pop_type ')' '{' go_to_false_quad BLOCK '}' fill_go_to_false_quad_if ELSE_STMT\n    \n    ELSE_STMT : ELSE '{' go_to_true_quad BLOCK '}' fill_go_to_true_quad\n              | empty pop_operand\n    \n    WHILE_STMT : WHILE '(' append_jump EXPRESSION pop_type ')' '{' go_to_false_quad  BLOCK '}' fill_go_to_false_quad go_to_quad pop_operand\n    check_exact_type_for : add_final_counter_for : generate_for_quad : check_boolean_expression_for : end_for : \n    FOR_STMT : ASSIGNATION check_exact_type_for TO '(' EXPRESSION check_exact_type_for add_final_counter_for check_boolean_expression_for ')' generate_for_quad DO '{' BLOCK '}' end_for\n    \n    DESCRIBE_STMT : ID '.' DESCRIBE '(' ')' \n    aritmetics_operation : \n    EXPRESSION : AND_EXP EXPRESSION_PRIME\n    \n    EXPRESSION_PRIME : OR AND_EXP EXPRESSION_PRIME\n                     | empty\n    \n    AND_EXP : B_EXP AND_EXP_PRIME\n    \n    AND_EXP_PRIME : AND B_EXP AND_EXP_PRIME\n                  | empty\n    \n    B_EXP : TRUE\n          | FALSE\n          | EXP B_EXP_PRIME\n    \n    B_EXP_PRIME : '>' add_operator B_EXP aritmetics_operation\n                | '<' add_operator B_EXP aritmetics_operation\n                | DIFFERENT add_operator B_EXP aritmetics_operation\n                | EQUAL add_operator B_EXP aritmetics_operation\n                | empty\n    \n    EXP : TERM EXP_PRIME\n    \n    EXP_PRIME : '+' add_operator TERM EXP_PRIME aritmetics_operation\n              | '-' add_operator TERM EXP_PRIME aritmetics_operation\n              | empty\n    \n    TERM : FACTOR TERM_PRIME\n    \n    TERM_PRIME : '*' add_operator FACTOR aritmetics_operation TERM_PRIME \n                  | '/' add_operator FACTOR aritmetics_operation TERM_PRIME \n                  | empty\n    \n    FACTOR : '(' EXPRESSION ')'\n              | '*' VAR_CT\n              | '/' VAR_CT\n              | VAR_CT\n    \n    VAR_CT : ID add_operand\n           | I_CONST add_operand\n           | F_CONST add_operand\n           | C_CONST add_operand\n           | FUNC_CALL\n           | ID add_id '[' EXPRESSION ']' ver_quad_dimension_one\n           | ID add_id '[' EXPRESSION ']' ver_quad_dimension_one '[' EXPRESSION ']'\n    empty :"
    
_lr_action_items = {'PROG':([0,],[2,]),'$end':([1,146,178,],[0,-3,-1,]),'ID':([2,3,10,11,17,18,19,20,21,22,23,28,29,32,33,34,37,38,41,45,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,122,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,157,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,225,226,227,231,237,238,241,245,246,247,251,252,257,258,260,261,268,269,270,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-16,4,-129,-11,-10,30,31,-33,-16,-16,-16,-34,-16,-30,-31,-32,42,43,-5,53,55,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,55,55,-121,55,-55,-55,-55,-126,108,109,-20,-21,-122,-96,55,-98,-99,55,-101,-104,-54,-54,-54,-54,-109,-110,-54,-54,-113,-114,-54,-54,-117,-119,-120,-123,-124,-125,109,-46,-47,-50,-51,-52,-53,153,55,-129,-129,55,55,55,55,55,55,55,55,-118,-48,-49,-54,55,-83,186,55,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,55,55,55,-54,55,55,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,55,-58,55,55,-127,-111,-112,-115,-116,-94,-56,-56,-57,-69,-129,55,55,-59,-61,-60,55,-75,-129,109,-23,-64,109,-75,281,109,-128,-65,109,-77,55,-129,-76,-84,-81,-80,109,-78,-86,-81,109,-87,-92,-93,-79,-85,]),';':([4,5,30,31,39,40,44,46,47,53,55,57,58,59,60,61,62,63,66,68,69,70,71,77,79,81,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,109,114,115,116,128,130,131,132,141,161,165,166,167,168,169,170,171,172,173,174,189,192,193,194,195,196,197,198,199,204,205,215,216,217,218,219,220,223,239,243,250,261,265,273,274,297,],[-6,6,-6,-6,-129,-129,52,-25,54,-6,-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-17,-122,-18,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,-55,-126,149,150,-129,164,-129,-129,-118,-24,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-105,-106,-107,-108,-95,-95,-129,-129,225,-126,-127,-18,-111,-112,-115,-116,-27,260,-127,-71,-64,-70,-128,-65,304,]),'VAR':([6,7,8,10,41,49,52,54,76,78,164,191,237,257,260,],[-2,-9,12,12,-5,12,-7,-7,-20,-21,-19,-22,12,12,-23,]),'FUNC':([6,7,8,9,10,11,14,17,25,41,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,225,226,227,231,237,238,241,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,283,288,291,292,294,295,299,301,302,305,306,307,308,311,312,313,314,316,317,318,319,],[-2,-9,-129,16,-129,-11,16,-10,16,-5,72,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,72,72,-121,72,-55,-55,-55,-126,72,-20,-21,-122,-96,72,-98,-99,72,-101,-104,-54,-54,-54,-54,-109,-110,-54,-54,-113,-114,-54,-54,-117,-119,-120,-123,-124,-125,72,-46,-47,-50,-51,-52,-53,72,-129,-129,72,72,72,72,72,72,72,72,-118,-48,-49,-54,72,-83,72,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,72,72,72,-54,72,72,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,72,-58,72,72,-127,-111,-112,-115,-116,-94,-56,-56,-57,-69,-129,72,72,-59,-61,-60,72,-75,-129,72,-23,-64,72,-75,72,-128,-65,72,-4,-77,72,-38,-129,-76,-84,-81,-80,72,-78,-86,-81,72,-87,-4,-92,-37,-93,-79,-85,]),'VOID':([6,7,8,9,10,11,13,14,15,16,17,25,26,27,36,52,54,76,78,164,191,260,283,292,313,316,],[-2,-9,-129,-129,-129,-11,24,-129,-13,29,-10,-129,-12,-15,-14,-7,-7,-20,-21,-19,-22,-23,-4,-38,-4,-37,]),'FOR':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,131,132,141,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,217,218,219,220,222,225,226,227,237,245,246,247,252,257,258,260,261,268,269,271,273,274,280,288,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,122,-20,-21,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,122,-46,-47,-50,-51,-52,-53,-129,-129,-118,-48,-49,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,-58,-127,-111,-112,-115,-116,-94,-56,-56,-57,-129,-59,-61,-60,-75,-129,122,-23,-64,122,-75,122,-128,-65,122,-77,-129,-76,-84,-81,-80,122,-78,-86,-81,122,-87,-92,-93,-79,-85,]),'PRINT':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,131,132,141,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,217,218,219,220,222,225,226,227,237,245,246,247,252,257,258,260,261,268,269,271,273,274,280,288,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,123,-20,-21,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,123,-46,-47,-50,-51,-52,-53,-129,-129,-118,-48,-49,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,-58,-127,-111,-112,-115,-116,-94,-56,-56,-57,-129,-59,-61,-60,-75,-129,123,-23,-64,123,-75,123,-128,-65,123,-77,-129,-76,-84,-81,-80,123,-78,-86,-81,123,-87,-92,-93,-79,-85,]),'IF':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,131,132,141,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,217,218,219,220,222,225,226,227,237,245,246,247,252,257,258,260,261,268,269,271,273,274,280,288,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,124,-20,-21,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,124,-46,-47,-50,-51,-52,-53,-129,-129,-118,-48,-49,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,-58,-127,-111,-112,-115,-116,-94,-56,-56,-57,-129,-59,-61,-60,-75,-129,124,-23,-64,124,-75,124,-128,-65,124,-77,-129,-76,-84,-81,-80,124,-78,-86,-81,124,-87,-92,-93,-79,-85,]),'WHILE':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,131,132,141,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,217,218,219,220,222,225,226,227,237,245,246,247,252,257,258,260,261,268,269,271,273,274,280,288,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,125,-20,-21,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,125,-46,-47,-50,-51,-52,-53,-129,-129,-118,-48,-49,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,-58,-127,-111,-112,-115,-116,-94,-56,-56,-57,-129,-59,-61,-60,-75,-129,125,-23,-64,125,-75,125,-128,-65,125,-77,-129,-76,-84,-81,-80,125,-78,-86,-81,125,-87,-92,-93,-79,-85,]),'TRUE':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,225,226,227,231,237,238,241,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,59,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,59,-121,-55,-55,-55,-126,59,-20,-21,-122,-96,59,-98,-99,59,-101,-104,-54,-54,-54,-54,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,59,-46,-47,-50,-51,-52,-53,59,-129,-129,59,59,59,59,-118,-48,-49,-54,59,-83,59,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,59,59,59,-54,59,59,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,59,-58,59,59,-127,-111,-112,-115,-116,-94,-56,-56,-57,-69,-129,59,59,-59,-61,-60,59,-75,-129,59,-23,-64,59,-75,59,-128,-65,59,-77,59,-129,-76,-84,-81,-80,59,-78,-86,-81,59,-87,-92,-93,-79,-85,]),'FALSE':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,97,98,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,225,226,227,231,237,238,241,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,60,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,60,-121,-55,-55,-55,-126,60,-20,-21,-122,-96,60,-98,-99,60,-101,-104,-54,-54,-54,-54,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,60,-46,-47,-50,-51,-52,-53,60,-129,-129,60,60,60,60,-118,-48,-49,-54,60,-83,60,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,60,60,60,-54,60,60,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,60,-58,60,60,-127,-111,-112,-115,-116,-94,-56,-56,-57,-69,-129,60,60,-59,-61,-60,60,-75,-129,60,-23,-64,60,-75,60,-128,-65,60,-77,60,-129,-76,-84,-81,-80,60,-78,-86,-81,60,-87,-92,-93,-79,-85,]),'(':([10,11,17,41,42,43,48,49,50,51,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,74,75,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,108,111,113,114,117,118,119,120,123,124,125,129,131,132,133,134,135,136,137,138,139,140,141,142,149,150,151,154,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,179,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,225,226,227,231,237,238,241,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,-6,-6,64,-129,-9,-9,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,64,-121,-55,-55,-55,-126,64,126,127,-20,-21,-122,-96,64,-98,-99,64,-101,-104,-54,-54,-54,-54,-109,-110,-54,-54,-113,-114,-54,-54,-117,-119,-120,-123,-124,-125,-62,64,-46,-47,-50,-51,-52,-53,-54,155,156,64,-129,-129,64,64,64,64,64,64,64,64,-118,175,-48,-49,-54,183,64,-83,64,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,64,201,64,203,64,-54,64,64,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,64,-58,64,64,-127,-111,-112,-115,-116,-94,-56,-56,-57,-69,-129,64,64,-59,-61,-60,64,-75,-129,64,-23,-64,64,-75,64,-128,-65,64,-77,64,-129,-76,-84,-81,-80,64,-78,-86,-81,64,-87,-92,-93,-79,-85,]),'*':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,109,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,223,225,226,227,231,237,238,241,243,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,65,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,99,65,-121,-55,-55,-55,-126,65,-20,-21,-122,-96,65,-98,-99,65,-101,-104,-54,-54,-54,-54,-109,-110,-54,-54,-113,-114,-54,-54,-117,-119,-120,-123,-124,-125,-55,65,-46,-47,-50,-51,-52,-53,65,-129,-129,65,65,65,65,65,65,65,65,-118,-48,-49,-54,65,-83,65,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,65,65,65,-54,65,65,-27,-22,-105,-106,-107,-108,-95,-95,99,99,65,-58,65,65,-127,-111,-112,-115,-116,-94,-27,-56,-56,-57,-69,-129,65,65,-127,-59,-61,-60,65,-75,-129,65,-23,-64,65,-75,65,-128,-65,65,-77,65,-129,-76,-84,-81,-80,65,-78,-86,-81,65,-87,-92,-93,-79,-85,]),'/':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,66,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,109,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,223,225,226,227,231,237,238,241,243,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,67,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,100,67,-121,-55,-55,-55,-126,67,-20,-21,-122,-96,67,-98,-99,67,-101,-104,-54,-54,-54,-54,-109,-110,-54,-54,-113,-114,-54,-54,-117,-119,-120,-123,-124,-125,-55,67,-46,-47,-50,-51,-52,-53,67,-129,-129,67,67,67,67,67,67,67,67,-118,-48,-49,-54,67,-83,67,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,67,67,67,-54,67,67,-27,-22,-105,-106,-107,-108,-95,-95,100,100,67,-58,67,67,-127,-111,-112,-115,-116,-94,-27,-56,-56,-57,-69,-129,67,67,-127,-59,-61,-60,67,-75,-129,67,-23,-64,67,-75,67,-128,-65,67,-77,67,-129,-76,-84,-81,-80,67,-78,-86,-81,67,-87,-92,-93,-79,-85,]),'I_CONST':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,225,226,227,231,237,238,241,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,68,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,68,68,-121,68,-55,-55,-55,-126,68,-20,-21,-122,-96,68,-98,-99,68,-101,-104,-54,-54,-54,-54,-109,-110,-54,-54,-113,-114,-54,-54,-117,-119,-120,-123,-124,-125,68,-46,-47,-50,-51,-52,-53,68,-129,-129,68,68,68,68,68,68,68,68,-118,-48,-49,-54,68,-83,68,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,68,68,68,-54,68,68,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,68,-58,68,68,-127,-111,-112,-115,-116,-94,-56,-56,-57,-69,-129,68,68,-59,-61,-60,68,-75,-129,68,-23,-64,68,-75,68,-128,-65,68,-77,68,-129,-76,-84,-81,-80,68,-78,-86,-81,68,-87,-92,-93,-79,-85,]),'F_CONST':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,225,226,227,231,237,238,241,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,69,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,69,69,-121,69,-55,-55,-55,-126,69,-20,-21,-122,-96,69,-98,-99,69,-101,-104,-54,-54,-54,-54,-109,-110,-54,-54,-113,-114,-54,-54,-117,-119,-120,-123,-124,-125,69,-46,-47,-50,-51,-52,-53,69,-129,-129,69,69,69,69,69,69,69,69,-118,-48,-49,-54,69,-83,69,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,69,69,69,-54,69,69,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,69,-58,69,69,-127,-111,-112,-115,-116,-94,-56,-56,-57,-69,-129,69,69,-59,-61,-60,69,-75,-129,69,-23,-64,69,-75,69,-128,-65,69,-77,69,-129,-76,-84,-81,-80,69,-78,-86,-81,69,-87,-92,-93,-79,-85,]),'C_CONST':([10,11,17,41,48,49,52,54,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,73,76,78,79,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,103,104,105,106,107,111,113,114,117,118,119,120,129,131,132,133,134,135,136,137,138,139,140,141,149,150,151,155,156,163,164,165,166,167,168,169,170,171,172,173,174,175,177,180,181,183,185,189,191,192,193,194,195,196,197,198,199,203,205,206,207,215,217,218,219,220,222,225,226,227,231,237,238,241,245,246,247,251,252,257,258,260,261,268,269,271,273,274,280,288,291,294,295,299,301,302,305,306,307,308,311,312,314,317,318,319,],[-129,-11,-10,-5,70,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,70,70,-121,70,-55,-55,-55,-126,70,-20,-21,-122,-96,70,-98,-99,70,-101,-104,-54,-54,-54,-54,-109,-110,-54,-54,-113,-114,-54,-54,-117,-119,-120,-123,-124,-125,70,-46,-47,-50,-51,-52,-53,70,-129,-129,70,70,70,70,70,70,70,70,-118,-48,-49,-54,70,-83,70,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,70,70,70,-54,70,70,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,70,-58,70,70,-127,-111,-112,-115,-116,-94,-56,-56,-57,-69,-129,70,70,-59,-61,-60,70,-75,-129,70,-23,-64,70,-75,70,-128,-65,70,-77,70,-129,-76,-84,-81,-80,70,-78,-86,-81,70,-87,-92,-93,-79,-85,]),'}':([10,11,17,41,49,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,73,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,110,111,112,113,114,117,118,119,120,131,132,141,147,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,217,218,219,220,222,225,226,227,237,245,246,247,252,258,260,261,268,269,272,273,274,279,280,288,289,294,295,299,301,302,304,305,306,307,308,309,310,311,312,314,315,317,318,319,],[-129,-11,-10,-5,-129,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-129,-20,-21,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,146,-129,-45,-46,-47,-50,-51,-52,-53,-129,-129,-118,-44,-48,-49,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,-58,-127,-111,-112,-115,-116,-94,-56,-56,-57,-129,-59,-61,-60,-75,-129,-23,-64,-129,-75,283,-128,-65,288,-129,-77,295,-129,-76,-84,-81,-80,-36,-129,-78,-86,-81,313,314,-129,-87,-92,318,-93,-79,-85,]),'RETURN':([10,11,17,52,54,55,57,58,59,60,61,62,63,66,68,69,70,71,76,78,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,111,112,113,114,117,118,119,120,131,132,141,147,149,150,164,165,166,167,168,169,170,171,172,173,174,189,191,192,193,194,195,196,197,198,199,205,215,217,218,219,220,222,225,226,227,245,246,247,257,260,261,271,273,274,282,288,294,295,299,301,302,307,308,312,314,317,318,319,],[-129,-11,-10,-7,-7,-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-20,-21,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,-129,-45,-46,-47,-50,-51,-52,-53,-129,-129,-118,-44,-48,-49,-19,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-22,-105,-106,-107,-108,-95,-95,-129,-129,-58,-127,-111,-112,-115,-116,-94,-56,-56,-57,-59,-61,-60,-129,-23,-64,-129,-128,-65,291,-77,-129,-76,-84,-81,-80,-86,-81,-87,-92,-93,-79,-85,]),'DATAFRAME':([12,],[20,]),'INT':([12,16,126,127,255,],[21,21,21,21,21,]),'FLOAT':([12,16,126,127,255,],[22,22,22,22,22,]),'CHAR':([12,16,126,127,255,],[23,23,23,23,23,]),'MAIN':([24,],[35,]),',':([30,31,39,40,53,55,57,58,59,60,61,62,63,66,68,69,70,71,77,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,128,131,132,141,165,166,167,168,169,170,171,172,173,174,186,189,192,193,194,195,196,197,198,199,200,208,209,212,215,217,218,219,220,221,229,235,261,262,266,267,273,274,275,277,278,281,290,296,],[-6,-6,45,45,-6,-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-17,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,45,-129,-129,-118,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-6,-27,-105,-106,-107,-108,-95,-95,-129,-129,-63,-68,231,-8,-127,-111,-112,-115,-116,241,231,255,-64,-63,-68,-68,-128,-65,241,231,231,-6,-8,255,]),'[':([31,40,55,80,81,109,130,145,153,182,189,215,223,243,],[-6,48,-6,129,-18,-6,163,177,-6,207,-27,238,-27,238,]),'{':([35,213,214,233,236,253,298,300,],[41,-35,237,252,257,269,305,306,]),'+':([55,62,63,66,68,69,70,71,79,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,198,199,205,215,219,220,223,243,261,273,274,],[-55,95,-129,-121,-55,-55,-55,-126,-122,-114,-117,-119,-120,-123,-124,-125,-55,-126,-118,95,95,-95,-95,-27,-129,-129,-126,-127,-115,-116,-27,-127,-64,-128,-65,]),'-':([55,62,63,66,68,69,70,71,79,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,198,199,205,215,219,220,223,243,261,273,274,],[-55,96,-129,-121,-55,-55,-55,-126,-122,-114,-117,-119,-120,-123,-124,-125,-55,-126,-118,96,96,-95,-95,-27,-129,-129,-126,-127,-115,-116,-27,-127,-64,-128,-65,]),'>':([55,61,62,63,66,68,69,70,71,79,94,97,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,196,197,198,199,205,215,217,218,219,220,223,243,261,273,274,],[-55,89,-129,-129,-121,-55,-55,-55,-126,-122,-110,-113,-114,-117,-119,-120,-123,-124,-125,-55,-126,-118,-129,-129,-95,-95,-27,-95,-95,-129,-129,-126,-127,-111,-112,-115,-116,-27,-127,-64,-128,-65,]),'<':([55,61,62,63,66,68,69,70,71,79,94,97,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,196,197,198,199,205,215,217,218,219,220,223,243,261,273,274,],[-55,90,-129,-129,-121,-55,-55,-55,-126,-122,-110,-113,-114,-117,-119,-120,-123,-124,-125,-55,-126,-118,-129,-129,-95,-95,-27,-95,-95,-129,-129,-126,-127,-111,-112,-115,-116,-27,-127,-64,-128,-65,]),'DIFFERENT':([55,61,62,63,66,68,69,70,71,79,94,97,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,196,197,198,199,205,215,217,218,219,220,223,243,261,273,274,],[-55,91,-129,-129,-121,-55,-55,-55,-126,-122,-110,-113,-114,-117,-119,-120,-123,-124,-125,-55,-126,-118,-129,-129,-95,-95,-27,-95,-95,-129,-129,-126,-127,-111,-112,-115,-116,-27,-127,-64,-128,-65,]),'EQUAL':([55,61,62,63,66,68,69,70,71,79,94,97,98,101,103,104,105,106,107,109,114,141,171,172,173,174,189,196,197,198,199,205,215,217,218,219,220,223,243,261,273,274,],[-55,92,-129,-129,-121,-55,-55,-55,-126,-122,-110,-113,-114,-117,-119,-120,-123,-124,-125,-55,-126,-118,-129,-129,-95,-95,-27,-95,-95,-129,-129,-126,-127,-111,-112,-115,-116,-27,-127,-64,-128,-65,]),'AND':([55,58,59,60,61,62,63,66,68,69,70,71,79,88,93,94,97,98,101,103,104,105,106,107,109,114,132,141,167,168,169,170,171,172,173,174,189,192,193,194,195,196,197,198,199,205,215,217,218,219,220,223,243,261,273,274,],[-55,86,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-122,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,-55,-126,86,-118,-95,-95,-95,-95,-129,-129,-95,-95,-27,-105,-106,-107,-108,-95,-95,-129,-129,-126,-127,-111,-112,-115,-116,-27,-127,-64,-128,-65,]),'OR':([55,57,58,59,60,61,62,63,66,68,69,70,71,79,85,87,88,93,94,97,98,101,103,104,105,106,107,109,114,131,132,141,166,167,168,169,170,171,172,173,174,189,192,193,194,195,196,197,198,199,205,215,217,218,219,220,223,243,261,273,274,],[-55,83,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-122,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,-55,-126,83,-129,-118,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-105,-106,-107,-108,-95,-95,-129,-129,-126,-127,-111,-112,-115,-116,-27,-127,-64,-128,-65,]),']':([55,56,57,58,59,60,61,62,63,66,68,69,70,71,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,131,132,141,162,165,166,167,168,169,170,171,172,173,174,189,190,192,193,194,195,196,197,198,199,202,215,217,218,219,220,223,228,259,261,273,274,],[-55,81,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,-129,-129,-118,189,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,216,-105,-106,-107,-108,-95,-95,-129,-129,223,-127,-111,-112,-115,-116,-27,248,273,-64,-128,-65,]),')':([55,57,58,59,60,61,62,63,66,68,69,70,71,79,82,84,85,87,88,93,94,97,98,101,102,103,104,105,106,107,126,127,131,132,141,158,159,160,165,166,167,168,169,170,171,172,173,174,184,186,187,188,189,192,193,194,195,196,197,198,199,200,201,208,209,210,211,212,215,217,218,219,220,221,224,229,230,232,234,235,240,242,244,249,254,256,261,262,263,266,267,273,274,275,276,277,278,281,284,286,287,290,296,303,],[-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,141,-119,-120,-123,-124,-125,-129,-129,-129,-129,-118,-39,-41,-39,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-82,-6,213,214,-27,-105,-106,-107,-108,-95,-95,-129,-129,-63,222,-68,-129,233,-82,-8,-127,-111,-112,-115,-116,-129,-88,-129,250,-74,253,-129,261,-67,-89,265,-40,-43,-64,-63,-91,-68,-68,-128,-65,-129,285,-129,-129,-6,-66,-72,-73,-8,-129,-42,]),'TO':([55,57,58,59,60,61,62,63,66,68,69,70,71,79,82,84,85,87,88,93,94,97,98,101,103,104,105,106,107,113,131,132,141,148,165,166,167,168,169,170,171,172,173,174,189,192,193,194,195,196,197,198,199,205,215,217,218,219,220,225,226,227,245,246,247,261,273,274,],[-55,-129,-129,-102,-103,-129,-129,-129,-121,-55,-55,-55,-126,-122,-96,-98,-99,-101,-104,-109,-110,-113,-114,-117,-119,-120,-123,-124,-125,-88,-129,-129,-118,179,-97,-100,-95,-95,-95,-95,-129,-129,-95,-95,-27,-105,-106,-107,-108,-95,-95,-129,-129,-58,-127,-111,-112,-115,-116,-56,-56,-57,-59,-61,-60,-64,-128,-65,]),'.':([109,],[143,]),'=':([109,121,144,152,153,223,243,248,264,],[-26,151,-28,181,-26,-27,-29,-27,-29,]),'DESCRIBE':([143,],[176,]),'TITLE':([183,231,251,],[209,-69,267,]),'DO':([285,293,],[-90,298,]),'ELSE':([288,294,],[-77,300,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAM':([0,],[1,]),'add_type':([2,21,22,23,29,],[3,32,33,34,38,]),'add_id':([4,30,31,42,43,53,55,109,153,186,281,],[5,39,40,50,51,77,80,145,182,212,290,]),'go_to_main':([6,],[7,]),'save_function':([7,50,51,],[8,74,75,]),'VARS_PRIME':([8,10,49,237,257,],[9,17,73,258,271,]),'VARS':([8,10,49,237,257,],[10,10,10,10,10,]),'empty':([8,9,10,14,25,39,40,49,57,58,61,62,63,73,111,126,127,128,131,132,171,172,198,199,209,221,229,235,237,257,258,268,271,275,277,278,280,294,296,305,311,],[11,15,11,27,27,46,46,11,84,87,93,97,101,112,112,159,159,46,84,87,97,97,101,101,232,242,232,256,11,11,112,112,112,242,232,232,112,301,256,112,112,]),'FUNCTION_PRIME':([9,],[13,]),'FUNCTION':([9,14,25,],[14,25,25,]),'TIPO_COMP':([12,],[18,]),'TIPO_SIMPLE':([12,16,126,127,255,],[19,28,157,157,270,]),'FUNC_PRIME':([14,25,],[26,36,]),'add_function_type':([28,],[37,]),'TIPO_PRIME':([39,40,128,],[44,47,161,]),'fill_go_to_main_quad':([41,],[49,]),'EXPRESSION':([48,64,73,111,129,155,163,175,177,180,183,185,203,206,207,238,241,251,258,268,271,280,291,305,311,],[56,102,115,115,162,184,190,200,202,204,208,211,224,227,228,259,262,266,115,115,115,115,297,115,115,]),'AND_EXP':([48,64,73,83,111,129,155,163,175,177,180,183,185,203,206,207,238,241,251,258,268,271,280,291,305,311,],[57,57,57,131,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'B_EXP':([48,64,73,83,86,111,129,133,134,135,136,155,163,175,177,180,183,185,203,206,207,238,241,251,258,268,271,280,291,305,311,],[58,58,58,58,132,58,58,167,168,169,170,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'EXP':([48,64,73,83,86,111,129,133,134,135,136,155,163,175,177,180,183,185,203,206,207,238,241,251,258,268,271,280,291,305,311,],[61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,61,]),'TERM':([48,64,73,83,86,111,129,133,134,135,136,137,138,155,163,175,177,180,183,185,203,206,207,238,241,251,258,268,271,280,291,305,311,],[62,62,62,62,62,62,62,62,62,62,62,171,172,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'FACTOR':([48,64,73,83,86,111,129,133,134,135,136,137,138,139,140,155,163,175,177,180,183,185,203,206,207,238,241,251,258,268,271,280,291,305,311,],[63,63,63,63,63,63,63,63,63,63,63,63,63,173,174,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'VAR_CT':([48,64,65,67,73,83,86,111,129,133,134,135,136,137,138,139,140,155,163,175,177,180,183,185,203,206,207,238,241,251,258,268,271,280,291,305,311,],[66,66,103,104,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'FUNC_CALL':([48,64,65,67,73,83,86,111,129,133,134,135,136,137,138,139,140,155,163,175,177,180,183,185,203,206,207,238,241,251,258,268,271,280,291,305,311,],[71,71,71,71,114,71,71,114,71,71,71,71,71,71,71,71,71,71,71,71,71,205,71,71,71,71,71,71,71,71,114,114,114,114,71,114,114,]),'save_ids':([52,54,],[76,78,]),'add_operand':([55,68,69,70,109,],[79,105,106,107,79,]),'EXPRESSION_PRIME':([57,131,],[82,165,]),'AND_EXP_PRIME':([58,132,],[85,166,]),'B_EXP_PRIME':([61,],[88,]),'EXP_PRIME':([62,171,172,],[94,196,197,]),'TERM_PRIME':([63,198,199,],[98,219,220,]),'BLOCK':([73,111,258,268,271,280,305,311,],[110,147,272,279,282,289,310,315,]),'STATEMENT':([73,111,258,268,271,280,305,311,],[111,111,111,111,111,111,111,111,]),'ASSIGNATION':([73,111,258,268,271,280,305,311,],[113,113,113,113,113,113,113,113,]),'WRITE':([73,111,258,268,271,280,305,311,],[116,116,116,116,116,116,116,116,]),'CONDITION':([73,111,258,268,271,280,305,311,],[117,117,117,117,117,117,117,117,]),'WHILE_STMT':([73,111,258,268,271,280,305,311,],[118,118,118,118,118,118,118,118,]),'FOR_STMT':([73,111,258,268,271,280,305,311,],[119,119,119,119,119,119,119,119,]),'DESCRIBE_STMT':([73,111,258,268,271,280,305,311,],[120,120,120,120,120,120,120,120,]),'VARIABLE':([73,111,122,258,268,271,280,305,311,],[121,121,152,121,121,121,121,121,121,]),'add_current_type':([77,],[128,]),'check_for_array_length':([81,216,],[130,239,]),'add_operator':([89,90,91,92,95,96,99,100,123,151,181,],[133,134,135,136,137,138,139,140,154,180,206,]),'era_quad':([108,],[142,]),'get_variable':([109,153,],[144,144,]),'check_exact_type_for':([113,224,],[148,244,]),'PARAM':([126,127,],[158,160,]),'empty_global_variables_table':([146,],[178,]),'append_jump':([156,],[185,]),'add_parameters':([158,160,],[187,188,]),'save_array':([164,],[191,]),'aritmetics_operation':([167,168,169,170,173,174,196,197,],[192,193,194,195,198,199,217,218,]),'pop_type':([184,211,],[210,234,]),'ver_quad_dimension_one':([189,223,248,],[215,243,264,]),'param_quad':([200,262,],[221,275,]),'functions_assignation':([205,],[226,]),'print_quad':([208,266,267,],[229,277,278,]),'WRITE_PRIME':([209,229,277,278,],[230,249,286,287,]),'save_parameter':([212,290,],[235,296,]),'save_function_as_variable':([213,],[236,]),'FUNC_CALL_PRIME':([221,275,],[240,284,]),'add_assignation_quad':([225,226,],[245,246,]),'add_assignation_for_quad':([227,],[247,]),'add_print_operator':([231,],[251,]),'PARAM_PRIME':([235,296,],[254,303,]),'add_final_counter_for':([244,],[263,]),'go_to_false_quad':([252,269,],[268,280,]),'go_sub_quad':([261,],[274,]),'check_boolean_expression_for':([263,],[276,]),'empty_local_variables_table':([283,313,],[292,316,]),'generate_for_quad':([285,],[293,]),'fill_go_to_false_quad_if':([288,],[294,]),'ELSE_STMT':([294,],[299,]),'fill_go_to_false_quad':([295,],[302,]),'pop_operand':([301,308,],[307,312,]),'go_to_quad':([302,],[308,]),'return_quad':([304,],[309,]),'go_to_true_quad':([306,],[311,]),'end_for':([314,],[317,]),'fill_go_to_true_quad':([318,],[319,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAM","S'",1,None,None,None),
  ('PROGRAM -> PROG add_type ID add_id ; go_to_main save_function VARS_PRIME FUNCTION_PRIME VOID MAIN { fill_go_to_main_quad VARS_PRIME BLOCK } empty_global_variables_table','PROGRAM',17,'p_PROGRAM','parser.py',9),
  ('go_to_main -> <empty>','go_to_main',0,'p_go_to_main','parser.py',14),
  ('empty_global_variables_table -> <empty>','empty_global_variables_table',0,'p_empty_global_variables_table','parser.py',18),
  ('empty_local_variables_table -> <empty>','empty_local_variables_table',0,'p_empty_local_variables_table','parser.py',22),
  ('fill_go_to_main_quad -> <empty>','fill_go_to_main_quad',0,'p_fill_go_to_main_quad','parser.py',26),
  ('add_id -> <empty>','add_id',0,'p_add_id','parser.py',30),
  ('save_ids -> <empty>','save_ids',0,'p_save_ids','parser.py',34),
  ('save_parameter -> <empty>','save_parameter',0,'p_save_parameter','parser.py',38),
  ('save_function -> <empty>','save_function',0,'p_save_function','parser.py',42),
  ('VARS_PRIME -> VARS VARS_PRIME','VARS_PRIME',2,'p_VARS_PRIME','parser.py',47),
  ('VARS_PRIME -> empty','VARS_PRIME',1,'p_VARS_PRIME','parser.py',48),
  ('FUNCTION_PRIME -> FUNCTION FUNC_PRIME','FUNCTION_PRIME',2,'p_FUNCTION_PRIME','parser.py',54),
  ('FUNCTION_PRIME -> empty','FUNCTION_PRIME',1,'p_FUNCTION_PRIME','parser.py',55),
  ('FUNC_PRIME -> FUNCTION FUNC_PRIME','FUNC_PRIME',2,'p_FUNC','parser.py',61),
  ('FUNC_PRIME -> empty','FUNC_PRIME',1,'p_FUNC','parser.py',62),
  ('add_type -> <empty>','add_type',0,'p_add_type','parser.py',67),
  ('add_current_type -> <empty>','add_current_type',0,'p_add_current_type','parser.py',71),
  ('check_for_array_length -> <empty>','check_for_array_length',0,'p_check_for_array_length','parser.py',75),
  ('save_array -> <empty>','save_array',0,'p_save_array','parser.py',79),
  ('VARS -> VAR TIPO_COMP ID add_id TIPO_PRIME ; save_ids','VARS',7,'p_VARS','parser.py',84),
  ('VARS -> VAR TIPO_SIMPLE ID add_id TIPO_PRIME ; save_ids','VARS',7,'p_VARS','parser.py',85),
  ('VARS -> VAR TIPO_SIMPLE ID add_id [ EXPRESSION ] check_for_array_length ; save_array','VARS',10,'p_VARS','parser.py',86),
  ('VARS -> VAR TIPO_SIMPLE ID add_id [ EXPRESSION ] check_for_array_length [ EXPRESSION ] check_for_array_length ;','VARS',13,'p_VARS','parser.py',87),
  ('TIPO_PRIME -> , ID add_id add_current_type TIPO_PRIME','TIPO_PRIME',5,'p_TIPO_PRIME','parser.py',93),
  ('TIPO_PRIME -> empty','TIPO_PRIME',1,'p_TIPO_PRIME','parser.py',94),
  ('get_variable -> <empty>','get_variable',0,'p_get_variable','parser.py',99),
  ('ver_quad_dimension_one -> <empty>','ver_quad_dimension_one',0,'p_ver_quad_dimension_one','parser.py',103),
  ('VARIABLE -> ID get_variable','VARIABLE',2,'p_VARIABLE','parser.py',108),
  ('VARIABLE -> ID add_id [ EXPRESSION ] ver_quad_dimension_one','VARIABLE',6,'p_VARIABLE','parser.py',109),
  ('TIPO_SIMPLE -> INT add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',115),
  ('TIPO_SIMPLE -> FLOAT add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',116),
  ('TIPO_SIMPLE -> CHAR add_type','TIPO_SIMPLE',2,'p_TIPO_SIMPLE','parser.py',117),
  ('TIPO_COMP -> DATAFRAME','TIPO_COMP',1,'p_TIPO_COMP','parser.py',123),
  ('add_function_type -> <empty>','add_function_type',0,'p_add_function_type','parser.py',128),
  ('save_function_as_variable -> <empty>','save_function_as_variable',0,'p_save_function_as_variable','parser.py',132),
  ('return_quad -> <empty>','return_quad',0,'p_return_quad','parser.py',136),
  ('FUNCTION -> FUNC TIPO_SIMPLE add_function_type ID add_id save_function ( PARAM add_parameters ) save_function_as_variable { VARS_PRIME BLOCK RETURN EXPRESSION ; return_quad } empty_local_variables_table','FUNCTION',20,'p_FUNCTION','parser.py',141),
  ('FUNCTION -> FUNC VOID add_type ID add_id save_function ( PARAM add_parameters ) { VARS_PRIME BLOCK } empty_local_variables_table','FUNCTION',15,'p_FUNCTION','parser.py',142),
  ('add_parameters -> <empty>','add_parameters',0,'p_add_parameters','parser.py',147),
  ('PARAM -> TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME','PARAM',5,'p_PARAM','parser.py',152),
  ('PARAM -> empty','PARAM',1,'p_PARAM','parser.py',153),
  ('PARAM_PRIME -> , TIPO_SIMPLE ID add_id save_parameter PARAM_PRIME','PARAM_PRIME',6,'p_PARAM_PRIME','parser.py',159),
  ('PARAM_PRIME -> empty','PARAM_PRIME',1,'p_PARAM_PRIME','parser.py',160),
  ('BLOCK -> STATEMENT BLOCK','BLOCK',2,'p_BLOCK','parser.py',166),
  ('BLOCK -> empty','BLOCK',1,'p_BLOCK','parser.py',167),
  ('STATEMENT -> ASSIGNATION','STATEMENT',1,'p_STATEMENT','parser.py',173),
  ('STATEMENT -> FUNC_CALL','STATEMENT',1,'p_STATEMENT','parser.py',174),
  ('STATEMENT -> EXPRESSION ;','STATEMENT',2,'p_STATEMENT','parser.py',175),
  ('STATEMENT -> WRITE ;','STATEMENT',2,'p_STATEMENT','parser.py',176),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_STATEMENT','parser.py',177),
  ('STATEMENT -> WHILE_STMT','STATEMENT',1,'p_STATEMENT','parser.py',178),
  ('STATEMENT -> FOR_STMT','STATEMENT',1,'p_STATEMENT','parser.py',179),
  ('STATEMENT -> DESCRIBE_STMT','STATEMENT',1,'p_STATEMENT','parser.py',180),
  ('add_operator -> <empty>','add_operator',0,'p_add_operator','parser.py',185),
  ('add_operand -> <empty>','add_operand',0,'p_add_operand','parser.py',189),
  ('add_assignation_quad -> <empty>','add_assignation_quad',0,'p_add_assignation_quad','parser.py',193),
  ('add_assignation_for_quad -> <empty>','add_assignation_for_quad',0,'p_add_assignation_for_quad','parser.py',197),
  ('functions_assignation -> <empty>','functions_assignation',0,'p_functions_assignation','parser.py',201),
  ('ASSIGNATION -> VARIABLE = add_operator EXPRESSION ; add_assignation_quad','ASSIGNATION',6,'p_ASSIGNATION','parser.py',206),
  ('ASSIGNATION -> FOR VARIABLE = add_operator EXPRESSION add_assignation_for_quad','ASSIGNATION',6,'p_ASSIGNATION','parser.py',207),
  ('ASSIGNATION -> VARIABLE = add_operator FUNC_CALL functions_assignation add_assignation_quad','ASSIGNATION',6,'p_ASSIGNATION','parser.py',208),
  ('era_quad -> <empty>','era_quad',0,'p_era_quad','parser.py',213),
  ('param_quad -> <empty>','param_quad',0,'p_param_quad','parser.py',217),
  ('go_sub_quad -> <empty>','go_sub_quad',0,'p_go_sub_quad','parser.py',221),
  ('FUNC_CALL -> FUNC ID era_quad ( EXPRESSION param_quad FUNC_CALL_PRIME ) go_sub_quad','FUNC_CALL',9,'p_FUNC_CALL','parser.py',226),
  ('FUNC_CALL_PRIME -> , EXPRESSION param_quad FUNC_CALL_PRIME','FUNC_CALL_PRIME',4,'p_FUNC_CALL_PRIME','parser.py',232),
  ('FUNC_CALL_PRIME -> empty','FUNC_CALL_PRIME',1,'p_FUNC_CALL_PRIME','parser.py',233),
  ('print_quad -> <empty>','print_quad',0,'p_print_quad','parser.py',238),
  ('add_print_operator -> <empty>','add_print_operator',0,'p_add_print_operator','parser.py',242),
  ('WRITE -> PRINT add_operator ( EXPRESSION print_quad WRITE_PRIME )','WRITE',7,'p_WRITE','parser.py',247),
  ('WRITE -> PRINT add_operator ( TITLE WRITE_PRIME )','WRITE',6,'p_WRITE','parser.py',248),
  ('WRITE_PRIME -> , add_print_operator EXPRESSION print_quad WRITE_PRIME','WRITE_PRIME',5,'p_WRITE_PRIME','parser.py',254),
  ('WRITE_PRIME -> , add_print_operator TITLE print_quad WRITE_PRIME','WRITE_PRIME',5,'p_WRITE_PRIME','parser.py',255),
  ('WRITE_PRIME -> empty','WRITE_PRIME',1,'p_WRITE_PRIME','parser.py',256),
  ('go_to_false_quad -> <empty>','go_to_false_quad',0,'p_go_to_false_quad','parser.py',261),
  ('fill_go_to_false_quad -> <empty>','fill_go_to_false_quad',0,'p_fill_go_to_false_quad','parser.py',265),
  ('fill_go_to_false_quad_if -> <empty>','fill_go_to_false_quad_if',0,'p_fill_go_to_false_quad_if','parser.py',269),
  ('go_to_true_quad -> <empty>','go_to_true_quad',0,'p_go_to_true_quad','parser.py',273),
  ('fill_go_to_true_quad -> <empty>','fill_go_to_true_quad',0,'p_fill_go_to_true_quad','parser.py',277),
  ('go_to_quad -> <empty>','go_to_quad',0,'p_go_to_quad','parser.py',281),
  ('pop_operand -> <empty>','pop_operand',0,'p_pop_operand','parser.py',285),
  ('pop_type -> <empty>','pop_type',0,'p_pop_type','parser.py',289),
  ('append_jump -> <empty>','append_jump',0,'p_append_jump','parser.py',293),
  ('CONDITION -> IF ( EXPRESSION pop_type ) { go_to_false_quad BLOCK } fill_go_to_false_quad_if ELSE_STMT','CONDITION',11,'p_CONDITION','parser.py',298),
  ('ELSE_STMT -> ELSE { go_to_true_quad BLOCK } fill_go_to_true_quad','ELSE_STMT',6,'p_ELSE_STMT','parser.py',304),
  ('ELSE_STMT -> empty pop_operand','ELSE_STMT',2,'p_ELSE_STMT','parser.py',305),
  ('WHILE_STMT -> WHILE ( append_jump EXPRESSION pop_type ) { go_to_false_quad BLOCK } fill_go_to_false_quad go_to_quad pop_operand','WHILE_STMT',13,'p_WHILE_STMT','parser.py',311),
  ('check_exact_type_for -> <empty>','check_exact_type_for',0,'p_check_exact_type_for','parser.py',316),
  ('add_final_counter_for -> <empty>','add_final_counter_for',0,'p_add_final_counter_for','parser.py',320),
  ('generate_for_quad -> <empty>','generate_for_quad',0,'p_generate_for_quad','parser.py',324),
  ('check_boolean_expression_for -> <empty>','check_boolean_expression_for',0,'p_check_boolean_expression_for','parser.py',328),
  ('end_for -> <empty>','end_for',0,'p_end_for','parser.py',332),
  ('FOR_STMT -> ASSIGNATION check_exact_type_for TO ( EXPRESSION check_exact_type_for add_final_counter_for check_boolean_expression_for ) generate_for_quad DO { BLOCK } end_for','FOR_STMT',15,'p_FOR_STMT','parser.py',337),
  ('DESCRIBE_STMT -> ID . DESCRIBE ( )','DESCRIBE_STMT',5,'p_DESCRIBE_STMT','parser.py',343),
  ('aritmetics_operation -> <empty>','aritmetics_operation',0,'p_aritmetics_operation','parser.py',348),
  ('EXPRESSION -> AND_EXP EXPRESSION_PRIME','EXPRESSION',2,'p_EXPRESSION','parser.py',353),
  ('EXPRESSION_PRIME -> OR AND_EXP EXPRESSION_PRIME','EXPRESSION_PRIME',3,'p_EXPRESSION_PRIME','parser.py',359),
  ('EXPRESSION_PRIME -> empty','EXPRESSION_PRIME',1,'p_EXPRESSION_PRIME','parser.py',360),
  ('AND_EXP -> B_EXP AND_EXP_PRIME','AND_EXP',2,'p_AND_EXP','parser.py',366),
  ('AND_EXP_PRIME -> AND B_EXP AND_EXP_PRIME','AND_EXP_PRIME',3,'p_AND_EXP_PRIME','parser.py',372),
  ('AND_EXP_PRIME -> empty','AND_EXP_PRIME',1,'p_AND_EXP_PRIME','parser.py',373),
  ('B_EXP -> TRUE','B_EXP',1,'p_B_EXP','parser.py',379),
  ('B_EXP -> FALSE','B_EXP',1,'p_B_EXP','parser.py',380),
  ('B_EXP -> EXP B_EXP_PRIME','B_EXP',2,'p_B_EXP','parser.py',381),
  ('B_EXP_PRIME -> > add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',387),
  ('B_EXP_PRIME -> < add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',388),
  ('B_EXP_PRIME -> DIFFERENT add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',389),
  ('B_EXP_PRIME -> EQUAL add_operator B_EXP aritmetics_operation','B_EXP_PRIME',4,'p_B_EXP_PRIME','parser.py',390),
  ('B_EXP_PRIME -> empty','B_EXP_PRIME',1,'p_B_EXP_PRIME','parser.py',391),
  ('EXP -> TERM EXP_PRIME','EXP',2,'p_EXP','parser.py',397),
  ('EXP_PRIME -> + add_operator TERM EXP_PRIME aritmetics_operation','EXP_PRIME',5,'p_EXP_PRIME','parser.py',403),
  ('EXP_PRIME -> - add_operator TERM EXP_PRIME aritmetics_operation','EXP_PRIME',5,'p_EXP_PRIME','parser.py',404),
  ('EXP_PRIME -> empty','EXP_PRIME',1,'p_EXP_PRIME','parser.py',405),
  ('TERM -> FACTOR TERM_PRIME','TERM',2,'p_TERM','parser.py',411),
  ('TERM_PRIME -> * add_operator FACTOR aritmetics_operation TERM_PRIME','TERM_PRIME',5,'p_TERM_PRIME','parser.py',417),
  ('TERM_PRIME -> / add_operator FACTOR aritmetics_operation TERM_PRIME','TERM_PRIME',5,'p_TERM_PRIME','parser.py',418),
  ('TERM_PRIME -> empty','TERM_PRIME',1,'p_TERM_PRIME','parser.py',419),
  ('FACTOR -> ( EXPRESSION )','FACTOR',3,'p_FACTOR','parser.py',425),
  ('FACTOR -> * VAR_CT','FACTOR',2,'p_FACTOR','parser.py',426),
  ('FACTOR -> / VAR_CT','FACTOR',2,'p_FACTOR','parser.py',427),
  ('FACTOR -> VAR_CT','FACTOR',1,'p_FACTOR','parser.py',428),
  ('VAR_CT -> ID add_operand','VAR_CT',2,'p_VAR_CT','parser.py',434),
  ('VAR_CT -> I_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',435),
  ('VAR_CT -> F_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',436),
  ('VAR_CT -> C_CONST add_operand','VAR_CT',2,'p_VAR_CT','parser.py',437),
  ('VAR_CT -> FUNC_CALL','VAR_CT',1,'p_VAR_CT','parser.py',438),
  ('VAR_CT -> ID add_id [ EXPRESSION ] ver_quad_dimension_one','VAR_CT',6,'p_VAR_CT','parser.py',439),
  ('VAR_CT -> ID add_id [ EXPRESSION ] ver_quad_dimension_one [ EXPRESSION ]','VAR_CT',9,'p_VAR_CT','parser.py',440),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',449),
]
